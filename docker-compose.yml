version: '3.8'

services:
  # Database PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: fantai-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: fantaseriea
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5433:5432"
    networks:
      - fantai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Applicazione FantaAI
  fantai:
    build: .
    container_name: fantai-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fantaseriea
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/fantaseriea
      SESSION_SECRET: your-super-secret-session-key-change-this-in-production
      NODE_ENV: production
      # Football Data API
      FOOTBALL_DATA_API_KEY: ${FOOTBALL_DATA_API_KEY}
      # API-Football API (opzionale per statistiche)
      API_FOOTBALL_KEY: ${API_FOOTBALL_KEY}
      # AI Configuration
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    ports:
      - "3000:5001"
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./server/cache:/app/server/cache
    networks:
      - fantai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (opzionale)
  nginx:
    image: nginx:alpine
    container_name: fantai-nginx
    restart: unless-stopped
    depends_on:
      - fantai
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - fantai-network

volumes:
  postgres_data:
    driver: local

networks:
  fantai-network:
    driver: bridge
