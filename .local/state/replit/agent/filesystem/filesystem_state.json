{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a fantasy football (Fantacalcio Serie A) web application built with React frontend and Express.js backend. The application allows users to create teams, buy and sell players, and manage their fantasy football roster. It features a comprehensive player marketplace, team statistics, personalized player recommendations, and a credit-based economy system.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **React SPA**: Single-page application using React 18 with TypeScript\n- **Routing**: Client-side routing with Wouter for lightweight navigation\n- **State Management**: TanStack React Query for server state and caching, React Context for authentication\n- **UI Framework**: Shadcn/ui components built on Radix UI primitives with Tailwind CSS styling\n- **Build Tool**: Vite for development server and bundling with TypeScript support\n\n## Backend Architecture\n- **Express.js Server**: RESTful API server with TypeScript\n- **Route Structure**: Modular route handlers for authentication, players, teams, and transactions\n- **Storage Layer**: Abstract storage interface with in-memory implementation for development\n- **Error Handling**: Centralized error handling middleware with structured error responses\n- **Logging**: Request/response logging for API endpoints with duration tracking\n\n## Data Storage Solutions\n- **Database**: PostgreSQL configured via Drizzle ORM with connection pooling using Neon serverless\n- **Schema Management**: Drizzle Kit for migrations and schema synchronization\n- **ORM**: Drizzle ORM with Zod integration for type-safe database operations\n- **Tables**: Users, players, user_teams (roster), and transactions with proper foreign key relationships\n\n## Authentication and Authorization\n- **Session Management**: Simple authentication using username/password with localStorage persistence\n- **User Context**: React Context provider for global user state management\n- **Route Protection**: Client-side route guards that redirect unauthenticated users to login\n- **No JWT/OAuth**: Uses basic session-based authentication for simplicity\n\n## External Dependencies\n\n### Core Framework Dependencies\n- **@neondatabase/serverless**: PostgreSQL serverless database connection\n- **drizzle-orm**: Type-safe database ORM with PostgreSQL dialect\n- **drizzle-zod**: Zod schema integration for database validation\n- **@tanstack/react-query**: Server state management and data fetching\n- **wouter**: Lightweight client-side routing\n\n### UI and Styling\n- **@radix-ui/react-***: Accessible UI component primitives (30+ components)\n- **tailwindcss**: Utility-first CSS framework with custom design system\n- **class-variance-authority**: Type-safe component variant styling\n- **lucide-react**: Icon library for consistent iconography\n\n### Development and Build Tools\n- **vite**: Frontend build tool and development server\n- **@replit/vite-plugin-***: Replit-specific development plugins\n- **typescript**: Static type checking for both frontend and backend\n- **esbuild**: Server-side bundling for production deployment\n\n### Form and Data Handling\n- **react-hook-form**: Form state management and validation\n- **@hookform/resolvers**: Form validation resolvers\n- **zod**: Runtime type validation and schema definition\n- **date-fns**: Date manipulation utilities\n\nThe application follows a monorepo structure with shared TypeScript types and schemas between frontend and backend, enabling full-stack type safety. The architecture emphasizes developer experience with hot reloading, comprehensive TypeScript coverage, and a component-driven UI approach.","size_bytes":3655},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2755},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/football-api.ts":{"content":"import type { Player, InsertPlayer, Match, InsertMatch } from \"@shared/schema\";\n\n// Sistema basato esclusivamente su dati Fantacalcio.it per Serie A 2025/26\nexport class FantacalcioDataService {\n  \n  async getSerieAPlayers(): Promise<InsertPlayer[]> {\n    console.log('Caricamento dati Serie A 2025/26 da Fantacalcio.it...');\n    return this.getFantacalcioData();\n  }\n\n  async getSerieACalendar(): Promise<InsertMatch[]> {\n    console.log('Caricamento calendario Serie A 2025/26 da Fantacalcio.it...');\n    return this.getFantacalcioCalendarData();\n  }\n\n  private getFantacalcioData(): InsertPlayer[] {\n    return [\n      // === INTER MILAN === (TOP PLAYERS - quotazioni ufficiali Fantacalcio.it)\n      // Portieri\n      { name: \"Yann Sommer\", position: \"P\", team: \"Inter\", price: 16, rating: \"7.2\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Difensori\n      { name: \"Alessandro Bastoni\", position: \"D\", team: \"Inter\", price: 17, rating: \"6.5\", goals: 1, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Federico Dimarco\", position: \"D\", team: \"Inter\", price: 19, rating: \"7.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Denzel Dumfries\", position: \"D\", team: \"Inter\", price: 21, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Benjamin Pavard\", position: \"D\", team: \"Inter\", price: 15, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Nicolò Barella\", position: \"C\", team: \"Inter\", price: 14, rating: \"6.0\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Hakan Çalhanoğlu\", position: \"C\", team: \"Inter\", price: 23, rating: \"7.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Davide Frattesi\", position: \"C\", team: \"Inter\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Petar Sučić\", position: \"C\", team: \"Inter\", price: 12, rating: \"6.0\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Attaccanti\n      { name: \"Lautaro Martínez\", position: \"A\", team: \"Inter\", price: 34, rating: \"6.5\", goals: 1, assists: 1, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Marcus Thuram\", position: \"A\", team: \"Inter\", price: 31, rating: \"7.0\", goals: 2, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Mehdi Taremi\", position: \"A\", team: \"Inter\", price: 18, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Valentin Carboni\", position: \"A\", team: \"Inter\", price: 15, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === NAPOLI === (Trasferimenti estivi 2025)\n      // Portieri\n      { name: \"Alex Meret\", position: \"P\", team: \"Napoli\", price: 16, rating: \"7.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Difensori\n      { name: \"Giovanni Di Lorenzo\", position: \"D\", team: \"Napoli\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Alessandro Buongiorno\", position: \"D\", team: \"Napoli\", price: 13, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Sam Beukema\", position: \"D\", team: \"Napoli\", price: 15, rating: \"6.8\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Centrocampisti\n      { name: \"André-Frank Zambo Anguissa\", position: \"C\", team: \"Napoli\", price: 16, rating: \"7.0\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Scott McTominay\", position: \"C\", team: \"Napoli\", price: 26, rating: \"6.75\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Kevin De Bruyne\", position: \"C\", team: \"Napoli\", price: 23, rating: \"6.25\", goals: 1, assists: 0, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Lorenzo Lucca\", position: \"C\", team: \"Napoli\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Noa Lang\", position: \"A\", team: \"Napoli\", price: 18, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Attaccanti\n      { name: \"Matteo Politano\", position: \"A\", team: \"Napoli\", price: 16, rating: \"6.75\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"David Neres\", position: \"A\", team: \"Napoli\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Giacomo Raspadori\", position: \"A\", team: \"Napoli\", price: 13, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Romelu Lukaku\", position: \"A\", team: \"Napoli\", price: 30, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === JUVENTUS === (Nuovi acquisti 2025)\n      // Portieri\n      { name: \"Michele Di Gregorio\", position: \"P\", team: \"Juventus\", price: 17, rating: \"7.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Difensori\n      { name: \"Gleison Bremer\", position: \"D\", team: \"Juventus\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Andrea Cambiaso\", position: \"D\", team: \"Juventus\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Khéphren Thuram\", position: \"D\", team: \"Juventus\", price: 16, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Manuel Locatelli\", position: \"C\", team: \"Juventus\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Teun Koopmeiners\", position: \"C\", team: \"Juventus\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Filip Kostić\", position: \"C\", team: \"Juventus\", price: 12, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Attaccanti\n      { name: \"Dušan Vlahović\", position: \"A\", team: \"Juventus\", price: 26, rating: \"7.0\", goals: 2, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Jonathan David\", position: \"A\", team: \"Juventus\", price: 27, rating: \"6.0\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Kenan Yıldız\", position: \"A\", team: \"Juventus\", price: 25, rating: \"6.75\", goals: 0, assists: 2, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Francisco Conceição\", position: \"A\", team: \"Juventus\", price: 18, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === AC MILAN === (Nuovi innesti 2025)\n      // Portieri\n      { name: \"Mike Maignan\", position: \"P\", team: \"Milan\", price: 16, rating: \"7.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Difensori\n      { name: \"Strahinja Pavlović\", position: \"D\", team: \"Milan\", price: 14, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Perr Schuurs\", position: \"D\", team: \"Milan\", price: 12, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Alexis Saelemaekers\", position: \"D\", team: \"Milan\", price: 12, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Pervis Estupiñán\", position: \"D\", team: \"Milan\", price: 12, rating: \"6.0\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Luka Modrić\", position: \"C\", team: \"Milan\", price: 13, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Ruben Loftus-Cheek\", position: \"C\", team: \"Milan\", price: 14, rating: \"6.25\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Yunus Musah\", position: \"C\", team: \"Milan\", price: 12, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Ardon Jashari\", position: \"C\", team: \"Milan\", price: 10, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Christopher Nkunku\", position: \"C\", team: \"Milan\", price: 20, rating: \"7.0\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Attaccanti\n      { name: \"Rafael Leão\", position: \"A\", team: \"Milan\", price: 23, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Christian Pulisic\", position: \"A\", team: \"Milan\", price: 28, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Santiago Giménez\", position: \"A\", team: \"Milan\", price: 24, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === ATALANTA === \n      // Portieri\n      { name: \"Marco Carnesecchi\", position: \"P\", team: \"Atalanta\", price: 14, rating: \"7.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Difensori\n      { name: \"Raoul Bellanova\", position: \"D\", team: \"Atalanta\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Davide Zappacosta\", position: \"D\", team: \"Atalanta\", price: 13, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Marten de Roon\", position: \"C\", team: \"Atalanta\", price: 12, rating: \"6.25\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Éderson\", position: \"C\", team: \"Atalanta\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Mario Pašalić\", position: \"C\", team: \"Atalanta\", price: 14, rating: \"6.5\", goals: 1, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Attaccanti\n      { name: \"Ademola Lookman\", position: \"A\", team: \"Atalanta\", price: 28, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Gianluca Scamacca\", position: \"A\", team: \"Atalanta\", price: 20, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Nikola Krstović\", position: \"A\", team: \"Atalanta\", price: 20, rating: \"6.0\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // === BOLOGNA === \n      // Attaccanti\n      { name: \"Riccardo Orsolini\", position: \"A\", team: \"Bologna\", price: 30, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Santiago Castro\", position: \"A\", team: \"Bologna\", price: 20, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Ciro Immobile\", position: \"A\", team: \"Bologna\", price: 19, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Dan Ndoye\", position: \"A\", team: \"Bologna\", price: 19, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Jens Odgaard\", position: \"C\", team: \"Bologna\", price: 15, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Niklas Rowe\", position: \"A\", team: \"Bologna\", price: 14, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Nadir Zortea\", position: \"D\", team: \"Bologna\", price: 16, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Håkon Heggem\", position: \"D\", team: \"Bologna\", price: 12, rating: \"7.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === FIORENTINA ===\n      // Portieri\n      { name: \"David de Gea\", position: \"P\", team: \"Fiorentina\", price: 14, rating: \"7.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Difensori\n      { name: \"Dodò\", position: \"D\", team: \"Fiorentina\", price: 12, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Robin Gosens\", position: \"D\", team: \"Fiorentina\", price: 18, rating: \"6.25\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Pietro Comuzzo\", position: \"D\", team: \"Fiorentina\", price: 12, rating: \"6.25\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Luca Ranieri\", position: \"D\", team: \"Fiorentina\", price: 11, rating: \"6.25\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Rolando Mandragora\", position: \"C\", team: \"Fiorentina\", price: 15, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Attaccanti\n      { name: \"Moise Kean\", position: \"A\", team: \"Fiorentina\", price: 31, rating: \"7.0\", goals: 2, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Albert Gudmundsson\", position: \"A\", team: \"Fiorentina\", price: 24, rating: \"5.75\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Andrea Colpani\", position: \"A\", team: \"Fiorentina\", price: 18, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Riccardo Sottil\", position: \"A\", team: \"Fiorentina\", price: 16, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Roberto Piccoli\", position: \"A\", team: \"Fiorentina\", price: 17, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Edin Džeko\", position: \"A\", team: \"Fiorentina\", price: 14, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === LAZIO ===\n      // Portieri\n      { name: \"Ivan Provedel\", position: \"P\", team: \"Lazio\", price: 12, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Difensori\n      { name: \"Nuno Tavares\", position: \"D\", team: \"Lazio\", price: 12, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Mattéo Guendouzi\", position: \"C\", team: \"Lazio\", price: 12, rating: \"6.25\", goals: 1, assists: 0, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Nicolò Rovella\", position: \"C\", team: \"Lazio\", price: 13, rating: \"6.0\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Reda Belahyane\", position: \"C\", team: \"Lazio\", price: 12, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Attaccanti\n      { name: \"Valentín Castellanos\", position: \"A\", team: \"Lazio\", price: 22, rating: \"7.0\", goals: 1, assists: 2, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Mattia Zaccagni\", position: \"A\", team: \"Lazio\", price: 26, rating: \"6.25\", goals: 1, assists: 0, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Boulaye Dia\", position: \"A\", team: \"Lazio\", price: 21, rating: \"6.25\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Gustav Isaksen\", position: \"A\", team: \"Lazio\", price: 13, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Pedro\", position: \"A\", team: \"Lazio\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // === ROMA ===\n      // Portieri\n      { name: \"Mile Svilar\", position: \"P\", team: \"Roma\", price: 16, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Difensori\n      { name: \"Angeliño\", position: \"D\", team: \"Roma\", price: 15, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Evan Ndicka\", position: \"D\", team: \"Roma\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Mario Hermoso\", position: \"D\", team: \"Roma\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Wesley\", position: \"D\", team: \"Roma\", price: 15, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Leon Bailey\", position: \"A\", team: \"Roma\", price: 15, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Manu Koné\", position: \"C\", team: \"Roma\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Enzo Le Fée\", position: \"C\", team: \"Roma\", price: 13, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Ewan Ferguson\", position: \"C\", team: \"Roma\", price: 19, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Attaccanti\n      { name: \"Paulo Dybala\", position: \"A\", team: \"Roma\", price: 26, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Matías Soulé\", position: \"A\", team: \"Roma\", price: 20, rating: \"6.0\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Artem Dovbyk\", position: \"A\", team: \"Roma\", price: 20, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === SASSUOLO ===\n      // Attaccanti\n      { name: \"Domenico Berardi\", position: \"A\", team: \"Sassuolo\", price: 21, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Andrea Pinamonti\", position: \"A\", team: \"Sassuolo\", price: 16, rating: \"6.0\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Armand Laurienté\", position: \"A\", team: \"Sassuolo\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Edoardo Volpato\", position: \"A\", team: \"Sassuolo\", price: 12, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === COMO ===\n      // Attaccanti\n      { name: \"Nico Paz\", position: \"A\", team: \"Como\", price: 21, rating: \"7.0\", goals: 1, assists: 1, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Gabriel Strefezza\", position: \"A\", team: \"Como\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Lucas da Cunha\", position: \"C\", team: \"Como\", price: 12, rating: \"6.25\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Álvaro Morata\", position: \"A\", team: \"Como\", price: 18, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Sergi Roberto\", position: \"C\", team: \"Como\", price: 14, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Mads Kuhn\", position: \"A\", team: \"Como\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Patrick Douvikas\", position: \"A\", team: \"Como\", price: 12, rating: \"6.25\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Máximo Perrone\", position: \"C\", team: \"Como\", price: 11, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Alieu Fadera\", position: \"A\", team: \"Como\", price: 12, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Matthias Braunöder\", position: \"C\", team: \"Como\", price: 10, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Miloš Vojvodá\", position: \"D\", team: \"Como\", price: 11, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // === CREMONESE ===\n      // Difensori\n      { name: \"Federico Baschirotto\", position: \"D\", team: \"Cremonese\", price: 13, rating: \"6.75\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Giuseppe Pezzella\", position: \"D\", team: \"Cremonese\", price: 12, rating: \"6.25\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Matteo Bianchetti\", position: \"D\", team: \"Cremonese\", price: 11, rating: \"6.25\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Luca Floriani Mussolini\", position: \"D\", team: \"Cremonese\", price: 10, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Luca Collocolo\", position: \"D\", team: \"Cremonese\", price: 11, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Filippo Terracciano\", position: \"C\", team: \"Cremonese\", price: 14, rating: \"6.5\", goals: 1, assists: 0, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Alessandro Zerbin\", position: \"A\", team: \"Cremonese\", price: 13, rating: \"6.75\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Attaccanti\n      { name: \"Federico Bonazzoli\", position: \"A\", team: \"Cremonese\", price: 15, rating: \"7.5\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Franco Vázquez\", position: \"A\", team: \"Cremonese\", price: 14, rating: \"7.0\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Luca De Luca\", position: \"A\", team: \"Cremonese\", price: 12, rating: \"7.0\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Antonio Sanabria\", position: \"A\", team: \"Cremonese\", price: 13, rating: \"6.25\", goals: 0, assists: 1, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Luka Jovanović\", position: \"A\", team: \"Cremonese\", price: 11, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Cristian Shpendi\", position: \"A\", team: \"Cremonese\", price: 12, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Jari Vandeputte\", position: \"A\", team: \"Cremonese\", price: 13, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // === CAGLIARI ===\n      // Difensori\n      { name: \"Sebastiano Luperto\", position: \"D\", team: \"Cagliari\", price: 13, rating: \"6.75\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Matteo Prati\", position: \"C\", team: \"Cagliari\", price: 11, rating: \"6.25\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Gianluca Gaetano\", position: \"C\", team: \"Cagliari\", price: 12, rating: \"6.0\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Alessandro Palestra\", position: \"C\", team: \"Cagliari\", price: 10, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Attaccanti\n      { name: \"Zito Luvumbo\", position: \"A\", team: \"Cagliari\", price: 12, rating: \"6.25\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // === UDINESE ===\n      // Attaccanti\n      { name: \"Keinan Davis\", position: \"A\", team: \"Udinese\", price: 13, rating: \"6.75\", goals: 1, assists: 1, yellowCards: 1, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Florian Thauvin\", position: \"A\", team: \"Udinese\", price: 16, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Sandi Lovrić\", position: \"C\", team: \"Udinese\", price: 12, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Thomas Kristensen\", position: \"D\", team: \"Udinese\", price: 11, rating: \"6.75\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Rui Modesto\", position: \"D\", team: \"Udinese\", price: 10, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Atta Ouattara\", position: \"C\", team: \"Udinese\", price: 11, rating: \"6.75\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // === PARMA ===\n      // Centrocampisti\n      { name: \"Matteo Pellegrino\", position: \"C\", team: \"Parma\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Filip Ondrejka\", position: \"A\", team: \"Parma\", price: 12, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Attaccanti\n      { name: \"Patrick Cutrone\", position: \"A\", team: \"Parma\", price: 14, rating: \"7.0\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === LECCE ===\n      // Attaccanti\n      { name: \"Dragan Štulić\", position: \"A\", team: \"Lecce\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === TORINO ===\n      // Difensori\n      { name: \"Guillermo Maripán\", position: \"D\", team: \"Torino\", price: 12, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Saša Lukić\", position: \"C\", team: \"Torino\", price: 14, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Attaccanti\n      { name: \"Che Adams\", position: \"A\", team: \"Torino\", price: 13, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      { name: \"Nikola Vlašić\", position: \"A\", team: \"Torino\", price: 14, rating: \"6.0\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === VERONA ===\n      // Difensori\n      { name: \"Giangiacomo Orban\", position: \"D\", team: \"Verona\", price: 15, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Centrocampisti\n      { name: \"Suat Serdar\", position: \"C\", team: \"Verona\", price: 13, rating: \"6.0\", goals: 1, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // Attaccanti\n      { name: \"Casper Tengstedt\", position: \"A\", team: \"Verona\", price: 13, rating: \"6.5\", goals: 0, assists: 1, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      \n      // === GENOA ===\n      // Difensori\n      { name: \"Johan Vásquez\", position: \"D\", team: \"Genoa\", price: 12, rating: \"6.25\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n      { name: \"Giorgio Marcandalli\", position: \"D\", team: \"Genoa\", price: 10, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 1, isActive: true },\n      \n      // === PISA ===\n      // Centrocampisti  \n      { name: \"Idrissa Touré\", position: \"C\", team: \"Pisa\", price: 11, rating: \"6.5\", goals: 0, assists: 0, yellowCards: 0, redCards: 0, matchesPlayed: 2, isActive: true },\n    ];\n  }\n\n  private getFantacalcioCalendarData(): InsertMatch[] {\n    // Calendario Serie A 2025/26 - Risultati reali verificati\n    return [\n      // GIORNATA 1 (23-25 agosto 2025) - RISULTATI REALI\n      { round: 1, homeTeam: \"Sassuolo\", awayTeam: \"Napoli\", homeScore: 0, awayScore: 2, date: new Date('2025-08-23T20:45:00Z'), status: \"finished\", fantacalcioId: \"g1-1\" },\n      { round: 1, homeTeam: \"Genoa\", awayTeam: \"Lecce\", homeScore: 0, awayScore: 0, date: new Date('2025-08-23T18:30:00Z'), status: \"finished\", fantacalcioId: \"g1-2\" },\n      { round: 1, homeTeam: \"Milan\", awayTeam: \"Cremonese\", homeScore: 1, awayScore: 2, date: new Date('2025-08-23T20:45:00Z'), status: \"finished\", fantacalcioId: \"g1-3\" },\n      { round: 1, homeTeam: \"Roma\", awayTeam: \"Bologna\", homeScore: 1, awayScore: 0, date: new Date('2025-08-23T18:30:00Z'), status: \"finished\", fantacalcioId: \"g1-4\" }, // Gol di Wesley\n      { round: 1, homeTeam: \"Como\", awayTeam: \"Lazio\", homeScore: 2, awayScore: 0, date: new Date('2025-08-24T20:45:00Z'), status: \"finished\", fantacalcioId: \"g1-5\" },\n      { round: 1, homeTeam: \"Cagliari\", awayTeam: \"Fiorentina\", homeScore: 1, awayScore: 1, date: new Date('2025-08-24T18:30:00Z'), status: \"finished\", fantacalcioId: \"g1-6\" },\n      { round: 1, homeTeam: \"Atalanta\", awayTeam: \"Pisa\", homeScore: 1, awayScore: 1, date: new Date('2025-08-24T20:45:00Z'), status: \"finished\", fantacalcioId: \"g1-7\" },\n      { round: 1, homeTeam: \"Juventus\", awayTeam: \"Parma\", homeScore: 2, awayScore: 0, date: new Date('2025-08-24T18:30:00Z'), status: \"finished\", fantacalcioId: \"g1-8\" },\n      { round: 1, homeTeam: \"Udinese\", awayTeam: \"Verona\", homeScore: 1, awayScore: 1, date: new Date('2025-08-25T18:30:00Z'), status: \"finished\", fantacalcioId: \"g1-9\" },\n      { round: 1, homeTeam: \"Inter\", awayTeam: \"Torino\", homeScore: 0, awayScore: 0, date: new Date('2025-08-25T20:45:00Z'), status: \"finished\", fantacalcioId: \"g1-10\" },\n\n      // GIORNATA 2 (29-30 agosto 2025) - RISULTATI REALI\n      { round: 2, homeTeam: \"Lecce\", awayTeam: \"Milan\", homeScore: 0, awayScore: 2, date: new Date('2025-08-29T20:45:00Z'), status: \"finished\", fantacalcioId: \"g2-1\" },\n      { round: 2, homeTeam: \"Bologna\", awayTeam: \"Como\", homeScore: 1, awayScore: 0, date: new Date('2025-08-30T20:45:00Z'), status: \"finished\", fantacalcioId: \"g2-2\" }, // Gol di Orsolini\n      { round: 2, homeTeam: \"Parma\", awayTeam: \"Atalanta\", homeScore: 1, awayScore: 1, date: new Date('2025-08-30T18:30:00Z'), status: \"finished\", fantacalcioId: \"g2-3\" },\n      { round: 2, homeTeam: \"Napoli\", awayTeam: \"Cagliari\", homeScore: 4, awayScore: 0, date: new Date('2025-08-30T20:45:00Z'), status: \"finished\", fantacalcioId: \"g2-4\" },\n      { round: 2, homeTeam: \"Pisa\", awayTeam: \"Roma\", homeScore: 1, awayScore: 2, date: new Date('2025-08-30T18:30:00Z'), status: \"finished\", fantacalcioId: \"g2-5\" },\n      { round: 2, homeTeam: \"Cremonese\", awayTeam: \"Juventus\", homeScore: 0, awayScore: 1, date: new Date('2025-08-29T18:30:00Z'), status: \"finished\", fantacalcioId: \"g2-6\" },\n      { round: 2, homeTeam: \"Fiorentina\", awayTeam: \"Inter\", homeScore: 0, awayScore: 0, date: new Date('2025-08-30T18:30:00Z'), status: \"finished\", fantacalcioId: \"g2-7\" },\n      { round: 2, homeTeam: \"Lazio\", awayTeam: \"Udinese\", homeScore: 2, awayScore: 1, date: new Date('2025-08-29T20:45:00Z'), status: \"finished\", fantacalcioId: \"g2-8\" },\n      { round: 2, homeTeam: \"Torino\", awayTeam: \"Sassuolo\", homeScore: 1, awayScore: 1, date: new Date('2025-08-30T15:00:00Z'), status: \"finished\", fantacalcioId: \"g2-9\" },\n      { round: 2, homeTeam: \"Verona\", awayTeam: \"Genoa\", homeScore: 2, awayScore: 0, date: new Date('2025-08-29T18:30:00Z'), status: \"finished\", fantacalcioId: \"g2-10\" },\n\n      // GIORNATA 3 (14 settembre 2025) - BIG MATCH!\n      { round: 3, homeTeam: \"Atalanta\", awayTeam: \"Lecce\", homeScore: null, awayScore: null, date: new Date('2025-09-14T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g3-1\" },\n      { round: 3, homeTeam: \"Bologna\", awayTeam: \"Cagliari\", homeScore: null, awayScore: null, date: new Date('2025-09-14T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g3-2\" },\n      { round: 3, homeTeam: \"Fiorentina\", awayTeam: \"Udinese\", homeScore: null, awayScore: null, date: new Date('2025-09-14T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g3-3\" },\n      { round: 3, homeTeam: \"Juventus\", awayTeam: \"Inter\", homeScore: null, awayScore: null, date: new Date('2025-09-14T20:45:00Z'), status: \"scheduled\", fantacalcioId: \"g3-4\" }, // Derby d'Italia!\n      { round: 3, homeTeam: \"Lazio\", awayTeam: \"Roma\", homeScore: null, awayScore: null, date: new Date('2025-09-14T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g3-5\" }, // Derby della Capitale!\n      { round: 3, homeTeam: \"Milan\", awayTeam: \"Verona\", homeScore: null, awayScore: null, date: new Date('2025-09-14T20:45:00Z'), status: \"scheduled\", fantacalcioId: \"g3-6\" },\n      { round: 3, homeTeam: \"Napoli\", awayTeam: \"Parma\", homeScore: null, awayScore: null, date: new Date('2025-09-14T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g3-7\" },\n      { round: 3, homeTeam: \"Torino\", awayTeam: \"Como\", homeScore: null, awayScore: null, date: new Date('2025-09-14T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g3-8\" },\n      { round: 3, homeTeam: \"Venezia\", awayTeam: \"Monza\", homeScore: null, awayScore: null, date: new Date('2025-09-14T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g3-9\" },\n      { round: 3, homeTeam: \"Genoa\", awayTeam: \"Empoli\", homeScore: null, awayScore: null, date: new Date('2025-09-14T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g3-10\" },\n\n      // GIORNATA 4 (21 settembre 2025) \n      { round: 4, homeTeam: \"Cagliari\", awayTeam: \"Empoli\", homeScore: null, awayScore: null, date: new Date('2025-09-21T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g4-1\" },\n      { round: 4, homeTeam: \"Como\", awayTeam: \"Milan\", homeScore: null, awayScore: null, date: new Date('2025-09-21T20:45:00Z'), status: \"scheduled\", fantacalcioId: \"g4-2\" },\n      { round: 4, homeTeam: \"Genoa\", awayTeam: \"Bologna\", homeScore: null, awayScore: null, date: new Date('2025-09-21T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g4-3\" },\n      { round: 4, homeTeam: \"Inter\", awayTeam: \"Venezia\", homeScore: null, awayScore: null, date: new Date('2025-09-21T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g4-4\" },\n      { round: 4, homeTeam: \"Lecce\", awayTeam: \"Lazio\", homeScore: null, awayScore: null, date: new Date('2025-09-21T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g4-5\" },\n      { round: 4, homeTeam: \"Parma\", awayTeam: \"Fiorentina\", homeScore: null, awayScore: null, date: new Date('2025-09-21T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g4-6\" },\n      { round: 4, homeTeam: \"Roma\", awayTeam: \"Atalanta\", homeScore: null, awayScore: null, date: new Date('2025-09-21T20:45:00Z'), status: \"scheduled\", fantacalcioId: \"g4-7\" }, // Big match!\n      { round: 4, homeTeam: \"Torino\", awayTeam: \"Verona\", homeScore: null, awayScore: null, date: new Date('2025-09-21T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g4-8\" },\n      { round: 4, homeTeam: \"Udinese\", awayTeam: \"Napoli\", homeScore: null, awayScore: null, date: new Date('2025-09-21T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g4-9\" },\n      { round: 4, homeTeam: \"Juventus\", awayTeam: \"Sassuolo\", homeScore: null, awayScore: null, date: new Date('2025-09-21T20:45:00Z'), status: \"scheduled\", fantacalcioId: \"g4-10\" },\n\n      // GIORNATA 5 (28 settembre 2025)\n      { round: 5, homeTeam: \"Atalanta\", awayTeam: \"Juventus\", homeScore: null, awayScore: null, date: new Date('2025-09-28T20:45:00Z'), status: \"scheduled\", fantacalcioId: \"g5-1\" },\n      { round: 5, homeTeam: \"Bologna\", awayTeam: \"Lecce\", homeScore: null, awayScore: null, date: new Date('2025-09-28T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g5-2\" },\n      { round: 5, homeTeam: \"Empoli\", awayTeam: \"Inter\", homeScore: null, awayScore: null, date: new Date('2025-09-28T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g5-3\" },\n      { round: 5, homeTeam: \"Fiorentina\", awayTeam: \"Roma\", homeScore: null, awayScore: null, date: new Date('2025-09-28T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g5-4\" },\n      { round: 5, homeTeam: \"Lazio\", awayTeam: \"Genoa\", homeScore: null, awayScore: null, date: new Date('2025-09-28T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g5-5\" },\n      { round: 5, homeTeam: \"Milan\", awayTeam: \"Napoli\", homeScore: null, awayScore: null, date: new Date('2025-09-28T20:45:00Z'), status: \"scheduled\", fantacalcioId: \"g5-6\" }, // Big match!\n      { round: 5, homeTeam: \"Monza\", awayTeam: \"Como\", homeScore: null, awayScore: null, date: new Date('2025-09-28T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g5-7\" },\n      { round: 5, homeTeam: \"Sassuolo\", awayTeam: \"Udinese\", homeScore: null, awayScore: null, date: new Date('2025-09-28T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g5-8\" },\n      { round: 5, homeTeam: \"Torino\", awayTeam: \"Parma\", homeScore: null, awayScore: null, date: new Date('2025-09-28T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g5-9\" },\n      { round: 5, homeTeam: \"Venezia\", awayTeam: \"Cagliari\", homeScore: null, awayScore: null, date: new Date('2025-09-28T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g5-10\" },\n\n      // GIORNATA 6 (5 ottobre 2025)\n      { round: 6, homeTeam: \"Atalanta\", awayTeam: \"Como\", homeScore: null, awayScore: null, date: new Date('2025-10-05T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g6-1\" },\n      { round: 6, homeTeam: \"Fiorentina\", awayTeam: \"Roma\", homeScore: null, awayScore: null, date: new Date('2025-10-05T20:45:00Z'), status: \"scheduled\", fantacalcioId: \"g6-2\" },\n      { round: 6, homeTeam: \"Inter\", awayTeam: \"Torino\", homeScore: null, awayScore: null, date: new Date('2025-10-05T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g6-3\" },\n      { round: 6, homeTeam: \"Juventus\", awayTeam: \"Milan\", homeScore: null, awayScore: null, date: new Date('2025-10-05T20:45:00Z'), status: \"scheduled\", fantacalcioId: \"g6-4\" }, // Big match!\n      { round: 6, homeTeam: \"Lazio\", awayTeam: \"Torino\", homeScore: null, awayScore: null, date: new Date('2025-10-05T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g6-5\" },\n      { round: 6, homeTeam: \"Napoli\", awayTeam: \"Genoa\", homeScore: null, awayScore: null, date: new Date('2025-10-05T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g6-6\" },\n      { round: 6, homeTeam: \"Parma\", awayTeam: \"Lecce\", homeScore: null, awayScore: null, date: new Date('2025-10-05T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g6-7\" },\n      { round: 6, homeTeam: \"Udinese\", awayTeam: \"Cagliari\", homeScore: null, awayScore: null, date: new Date('2025-10-05T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g6-8\" },\n      { round: 6, homeTeam: \"Verona\", awayTeam: \"Sassuolo\", homeScore: null, awayScore: null, date: new Date('2025-10-05T15:00:00Z'), status: \"scheduled\", fantacalcioId: \"g6-9\" },\n      { round: 6, homeTeam: \"Venezia\", awayTeam: \"Bologna\", homeScore: null, awayScore: null, date: new Date('2025-10-05T18:30:00Z'), status: \"scheduled\", fantacalcioId: \"g6-10\" },\n    ];\n  }\n}\n\nexport const footballDataService = new FantacalcioDataService();","size_bytes":41343},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n    username: claims[\"email\"]?.split(\"@\")[0] || `user_${claims[\"sub\"]}`, // Generate username from email\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};","size_bytes":4325},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { setupAuth, isAuthenticated } from \"./replitAuth\";\nimport { insertUserTeamSchema, insertTransactionSchema } from \"@shared/schema\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Auth middleware\n  await setupAuth(app);\n\n  // Auth routes\n  app.get('/api/auth/user', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const user = await storage.getUser(userId);\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n\n  // Players routes\n  app.get(\"/api/players\", async (req, res) => {\n    try {\n      const { search, position, minPrice, maxPrice } = req.query;\n      \n      let players;\n      if (search || position || minPrice || maxPrice) {\n        players = await storage.searchPlayers(\n          search as string,\n          position as string,\n          minPrice ? parseInt(minPrice as string) : undefined,\n          maxPrice ? parseInt(maxPrice as string) : undefined\n        );\n      } else {\n        players = await storage.getAllPlayers();\n      }\n      \n      res.json(players);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch players\" });\n    }\n  });\n\n  app.get(\"/api/players/:id\", async (req, res) => {\n    try {\n      const player = await storage.getPlayerById(req.params.id);\n      if (!player) {\n        return res.status(404).json({ message: \"Player not found\" });\n      }\n      res.json(player);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch player\" });\n    }\n  });\n\n  // Team routes - protected\n  app.get(\"/api/team/:userId\", isAuthenticated, async (req, res) => {\n    try {\n      const userTeam = await storage.getUserTeam(req.params.userId);\n      \n      // Populate with player data\n      const teamWithPlayers = [];\n      for (const ut of userTeam) {\n        const player = await storage.getPlayerById(ut.playerId);\n        if (player) {\n          teamWithPlayers.push({ ...ut, player });\n        }\n      }\n      \n      res.json(teamWithPlayers);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch team\" });\n    }\n  });\n\n  app.get(\"/api/team/:userId/stats\", isAuthenticated, async (req, res) => {\n    try {\n      const stats = await storage.getUserTeamStats(req.params.userId);\n      res.json(stats);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch team stats\" });\n    }\n  });\n\n  app.post(\"/api/team/:userId/players\", isAuthenticated, async (req, res) => {\n    try {\n      const result = insertUserTeamSchema.safeParse({\n        userId: req.params.userId,\n        ...req.body,\n      });\n      \n      if (!result.success) {\n        return res.status(400).json({ message: \"Invalid request data\" });\n      }\n\n      const userTeam = await storage.addPlayerToTeam(result.data);\n      \n      // Create buy transaction\n      await storage.createTransaction({\n        userId: req.params.userId,\n        playerId: result.data.playerId,\n        type: \"BUY\",\n        amount: result.data.purchasePrice,\n      });\n\n      // Update user credits\n      const user = await storage.getUser(req.params.userId);\n      if (user) {\n        await storage.updateUserCredits(req.params.userId, user.totalCredits - result.data.purchasePrice);\n      }\n\n      res.json(userTeam);\n    } catch (error) {\n      console.error(\"Error adding player to team:\", error);\n      res.status(500).json({ message: \"Failed to add player to team\" });\n    }\n  });\n\n  app.delete(\"/api/team/:userId/players/:playerId\", isAuthenticated, async (req, res) => {\n    try {\n      const { userId, playerId } = req.params;\n      \n      // Get player details for pricing\n      const player = await storage.getPlayerById(playerId);\n      if (!player) {\n        return res.status(404).json({ message: \"Player not found\" });\n      }\n\n      // Calculate sale price (80% of current market value)\n      const salePrice = Math.floor(player.price * 0.8);\n\n      await storage.removePlayerFromTeam(userId, playerId);\n      \n      // Create sell transaction\n      await storage.createTransaction({\n        userId,\n        playerId,\n        type: \"SELL\",\n        amount: salePrice,\n      });\n\n      // Update user credits\n      const user = await storage.getUser(userId);\n      if (user) {\n        await storage.updateUserCredits(userId, user.totalCredits + salePrice);\n      }\n\n      res.json({ salePrice });\n    } catch (error) {\n      console.error(\"Error removing player from team:\", error);\n      res.status(500).json({ message: \"Failed to remove player from team\" });\n    }\n  });\n\n  // Recommendations route - protected\n  app.get(\"/api/recommendations/:userId\", isAuthenticated, async (req, res) => {\n    try {\n      const recommendations = await storage.getPlayerRecommendations(req.params.userId);\n      res.json(recommendations);\n    } catch (error) {\n      console.error(\"Error fetching recommendations:\", error);\n      res.status(500).json({ message: \"Failed to fetch recommendations\" });\n    }\n  });\n\n  // Market activity route\n  app.get(\"/api/market/activity\", async (req, res) => {\n    try {\n      const activity = await storage.getMarketActivity();\n      res.json(activity);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch market activity\" });\n    }\n  });\n\n  // Transactions route - protected\n  app.get(\"/api/transactions/:userId\", isAuthenticated, async (req, res) => {\n    try {\n      const transactions = await storage.getUserTransactions(req.params.userId);\n      res.json(transactions);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch transactions\" });\n    }\n  });\n\n  // Calendar route - public (calendario Serie A)\n  app.get(\"/api/calendar\", async (req, res) => {\n    try {\n      const matches = await storage.getSerieACalendar();\n      res.json(matches);\n    } catch (error) {\n      console.error(\"Error fetching calendar:\", error);\n      res.status(500).json({ message: \"Failed to fetch calendar\" });\n    }\n  });\n\n  // Admin route to refresh player data\n  app.post(\"/api/admin/refresh-players\", async (req, res) => {\n    try {\n      await storage.refreshPlayersFromAPI();\n      res.json({ message: \"Player data refreshed successfully\" });\n    } catch (error) {\n      console.error(\"Error refreshing player data:\", error);\n      res.status(500).json({ message: \"Failed to refresh player data\" });\n    }\n  });\n\n  // Public endpoint to refresh players (development only)\n  app.post(\"/api/players/refresh\", async (req, res) => {\n    try {\n      await storage.refreshPlayersFromAPI();\n      res.json({ message: \"Player data refreshed successfully\" });\n    } catch (error) {\n      console.error(\"Error refreshing player data:\", error);\n      res.status(500).json({ message: \"Failed to refresh player data\", error: error instanceof Error ? error.message : 'Unknown error' });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}","size_bytes":7125},"server/storage.ts":{"content":"import {\n  users,\n  players,\n  userTeams,\n  transactions,\n  matches,\n  type User,\n  type UpsertUser,\n  type Player,\n  type InsertPlayer,\n  type UserTeam,\n  type InsertUserTeam,\n  type Transaction,\n  type InsertTransaction,\n  type Match,\n  type InsertMatch,\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, and, sql, desc, asc } from \"drizzle-orm\";\nimport { footballDataService } from \"./football-api\";\nimport type { \n  TeamStats, \n  PlayerRecommendation, \n  MarketActivity,\n  Formation,\n  MatchSimulation,\n  LeagueStanding \n} from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // User operations - OAuth compatible\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: Omit<User, 'id' | 'totalCredits' | 'createdAt' | 'updatedAt'>): Promise<User>;\n  upsertUser(user: UpsertUser): Promise<User>;\n  updateUserCredits(userId: string, credits: number): Promise<void>;\n\n  // Player operations\n  getAllPlayers(): Promise<Player[]>;\n  getPlayerById(id: string): Promise<Player | undefined>;\n  searchPlayers(query: string, position?: string, minPrice?: number, maxPrice?: number): Promise<Player[]>;\n  getPlayersByPosition(position: string): Promise<Player[]>;\n  refreshPlayersFromAPI(): Promise<void>;\n\n  // Team operations\n  getUserTeam(userId: string): Promise<UserTeam[]>;\n  addPlayerToTeam(userTeam: InsertUserTeam): Promise<UserTeam>;\n  removePlayerFromTeam(userId: string, playerId: string): Promise<void>;\n  getUserTeamStats(userId: string): Promise<TeamStats>;\n\n  // Transaction operations\n  createTransaction(transaction: InsertTransaction): Promise<Transaction>;\n  getUserTransactions(userId: string): Promise<Transaction[]>;\n\n  // Recommendations and market\n  getPlayerRecommendations(userId: string): Promise<PlayerRecommendation[]>;\n  getMarketActivity(): Promise<MarketActivity[]>;\n\n  // Advanced features\n  getFormations(userId: string): Promise<Formation[]>;\n  saveFormation(userId: string, formation: Omit<Formation, 'id' | 'userId' | 'createdAt'>): Promise<Formation>;\n  getLeagueStandings(): Promise<LeagueStanding[]>;\n\n  // Calendar operations\n  getSerieACalendar(): Promise<Match[]>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  constructor() {\n    this.initializePlayers();\n  }\n\n  private async initializePlayers() {\n    try {\n      // Check if players already exist\n      const existingPlayers = await db.select().from(players).limit(1);\n      if (existingPlayers.length > 0) {\n        console.log(\"Players already exist in database\");\n        return;\n      }\n\n      // Initialize with API data\n      const playersData = await footballDataService.getSerieAPlayers();\n      \n      for (const playerData of playersData) {\n        await db.insert(players).values({\n          id: randomUUID(),\n          name: playerData.name,\n          position: playerData.position,\n          team: playerData.team,\n          price: playerData.price,\n          rating: playerData.rating.toString(),\n          goals: playerData.goals || 0,\n          assists: playerData.assists || 0,\n          yellowCards: playerData.yellowCards || 0,\n          redCards: playerData.redCards || 0,\n          matchesPlayed: playerData.matchesPlayed || 0,\n          isActive: true,\n        });\n      }\n      \n      console.log(`Initialized ${playersData.length} players in database`);\n    } catch (error) {\n      console.error('Error initializing players:', error);\n    }\n  }\n\n  // User operations\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.username, username));\n    return user;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user;\n  }\n\n  async createUser(userData: Omit<User, 'id' | 'totalCredits' | 'createdAt' | 'updatedAt'>): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values({\n        ...userData,\n        id: randomUUID(),\n      })\n      .returning();\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values({\n        ...userData,\n        username: userData.username || userData.email?.split(\"@\")[0] || `user_${userData.id}`,\n      })\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  async updateUserCredits(userId: string, credits: number): Promise<void> {\n    await db.update(users)\n      .set({ totalCredits: credits })\n      .where(eq(users.id, userId));\n  }\n\n  // Player operations\n  async getAllPlayers(): Promise<Player[]> {\n    return await db.select().from(players).where(eq(players.isActive, true));\n  }\n\n  async getPlayerById(id: string): Promise<Player | undefined> {\n    const [player] = await db.select().from(players).where(eq(players.id, id));\n    return player;\n  }\n\n  async searchPlayers(query: string, position?: string, minPrice?: number, maxPrice?: number): Promise<Player[]> {\n    let conditions = [eq(players.isActive, true)];\n    \n    if (query) {\n      conditions.push(sql`${players.name} ILIKE ${`%${query}%`} OR ${players.team} ILIKE ${`%${query}%`}`);\n    }\n    \n    if (position) {\n      conditions.push(eq(players.position, position));\n    }\n    \n    if (minPrice !== undefined) {\n      conditions.push(sql`${players.price} >= ${minPrice}`);\n    }\n    \n    if (maxPrice !== undefined) {\n      conditions.push(sql`${players.price} <= ${maxPrice}`);\n    }\n\n    return await db.select().from(players).where(and(...conditions));\n  }\n\n  async getPlayersByPosition(position: string): Promise<Player[]> {\n    return await db.select().from(players)\n      .where(and(eq(players.position, position), eq(players.isActive, true)));\n  }\n\n  async refreshPlayersFromAPI(): Promise<void> {\n    try {\n      console.log(\"Aggiornamento dati giocatori da Fantacalcio.it...\");\n      \n      // Get fresh data from Fantacalcio.it\n      const playersData = await footballDataService.getSerieAPlayers();\n      \n      // Clear existing players\n      await db.delete(players);\n      console.log(\"Cleared existing player data\");\n      \n      // Insert fresh data\n      for (const playerData of playersData) {\n        await db.insert(players).values({\n          id: randomUUID(),\n          name: playerData.name,\n          position: playerData.position,\n          team: playerData.team,\n          price: playerData.price,\n          rating: playerData.rating.toString(),\n          goals: playerData.goals || 0,\n          assists: playerData.assists || 0,\n          yellowCards: playerData.yellowCards || 0,\n          redCards: playerData.redCards || 0,\n          matchesPlayed: playerData.matchesPlayed || 0,\n          isActive: true,\n        });\n      }\n      \n      console.log(`Aggiornati ${playersData.length} giocatori Serie A da Fantacalcio.it`);\n    } catch (error) {\n      console.error(\"Failed to refresh player data:\", error);\n      throw error;\n    }\n  }\n\n  // Team operations\n  async getUserTeam(userId: string): Promise<UserTeam[]> {\n    return await db.select().from(userTeams).where(eq(userTeams.userId, userId));\n  }\n\n  async addPlayerToTeam(userTeam: InsertUserTeam): Promise<UserTeam> {\n    const [team] = await db.insert(userTeams).values(userTeam).returning();\n    return team;\n  }\n\n  async removePlayerFromTeam(userId: string, playerId: string): Promise<void> {\n    await db.delete(userTeams)\n      .where(and(eq(userTeams.userId, userId), eq(userTeams.playerId, playerId)));\n  }\n\n  async getUserTeamStats(userId: string): Promise<TeamStats> {\n    const team = await this.getUserTeam(userId);\n    const user = await this.getUser(userId);\n    \n    let totalGoals = 0;\n    let totalAssists = 0;\n    let totalRating = 0;\n    let spentCredits = 0;\n    \n    for (const ut of team) {\n      const player = await this.getPlayerById(ut.playerId);\n      if (player) {\n        totalGoals += player.goals;\n        totalAssists += player.assists;\n        totalRating += parseFloat(player.rating);\n        spentCredits += ut.purchasePrice;\n      }\n    }\n\n    return {\n      playerCount: team.length,\n      totalGoals,\n      totalAssists,\n      averageRating: team.length > 0 ? totalRating / team.length : 0,\n      spentCredits,\n      remainingCredits: (user?.totalCredits || 500) - spentCredits,\n    };\n  }\n\n  // Transaction operations\n  async createTransaction(transaction: InsertTransaction): Promise<Transaction> {\n    const [tx] = await db.insert(transactions).values(transaction).returning();\n    return tx;\n  }\n\n  async getUserTransactions(userId: string): Promise<Transaction[]> {\n    return await db.select().from(transactions)\n      .where(eq(transactions.userId, userId))\n      .orderBy(desc(transactions.createdAt));\n  }\n\n  // Recommendations\n  async getPlayerRecommendations(userId: string): Promise<PlayerRecommendation[]> {\n    const userTeamData = await this.getUserTeam(userId);\n    const ownedPlayerIds = new Set(userTeamData.map(ut => ut.playerId));\n    const teamStats = await this.getUserTeamStats(userId);\n    \n    const allPlayers = await db.select().from(players)\n      .where(eq(players.isActive, true));\n    \n    const availablePlayers = allPlayers.filter(p => !ownedPlayerIds.has(p.id));\n\n    // Enhanced recommendation algorithm per principianti\n    const recommendations = availablePlayers\n      .map(player => {\n        const valueScore = this.calculateBeginnerValueScore(player, userTeamData, teamStats);\n        return {\n          player,\n          valueScore,\n          reason: this.generateBeginnerRecommendationReason(player, userTeamData, teamStats),\n        };\n      })\n      .sort((a, b) => b.valueScore - a.valueScore)\n      .slice(0, 8);\n\n    return recommendations;\n  }\n\n  private calculateBeginnerValueScore(player: Player, userTeam: UserTeam[], teamStats: TeamStats): number {\n    const rating = parseFloat(player.rating);\n    const efficiency = player.matchesPlayed > 0 ? (player.goals + player.assists) / player.matchesPlayed : 0;\n    \n    // Per principianti: priorità a giocatori semplici e affidabili\n    let score = rating * 10; // Voto base è la priorità principale\n    \n    // Bonus per giocatori produttivi (gol + assist)\n    score += (player.goals + player.assists) * 5;\n    \n    // Bonus per giocatori che giocano sempre (affidabilità)\n    if (player.matchesPlayed >= 15) score += 20;\n    \n    // Penalità per prezzi troppo alti (principianti hanno budget limitato)\n    if (player.price > 40) score -= 30;\n    else if (player.price > 25) score -= 10;\n    \n    // Bonus per rapporto qualità-prezzo\n    if (rating >= 7.0 && player.price <= 20) score += 25;\n    if (rating >= 6.5 && player.price <= 10) score += 15;\n    \n    // Analisi posizione necessaria per la squadra\n    const positionNeed = this.getBeginnerPositionNeed(player.position, userTeam);\n    score *= positionNeed;\n    \n    return Math.max(score, 0);\n  }\n\n  private calculateAdvancedValueScore(player: Player, userTeam: UserTeam[], teamStats: TeamStats): number {\n    const rating = parseFloat(player.rating);\n    const efficiency = player.matchesPlayed > 0 ? (player.goals + player.assists) / player.matchesPlayed : 0;\n    const priceEfficiency = rating / (player.price / 10);\n    \n    // Position need analysis\n    const positionCounts = userTeam.reduce((acc, ut) => {\n      // Note: We'd need to join with players table to get position, simplified for now\n      acc[player.position] = (acc[player.position] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n    \n    const positionNeed = this.getPositionNeedMultiplier(player.position, positionCounts);\n    \n    // Form factor (recent performance)\n    const formFactor = player.matchesPlayed >= 5 ? 1 + (efficiency * 0.3) : 0.8;\n    \n    return priceEfficiency * positionNeed * formFactor;\n  }\n\n  private getPositionNeedMultiplier(position: string, positionCounts: Record<string, number>): number {\n    const counts = {\n      P: positionCounts.P || 0,\n      D: positionCounts.D || 0,\n      C: positionCounts.C || 0,\n      A: positionCounts.A || 0,\n    };\n    \n    const needs = {\n      P: counts.P < 3 ? 1.5 : 0.8,\n      D: counts.D < 8 ? 1.3 : 0.9,\n      C: counts.C < 8 ? 1.3 : 0.9,\n      A: counts.A < 6 ? 1.2 : 0.9,\n    };\n    \n    return needs[position as keyof typeof needs] || 1.0;\n  }\n\n  private getBeginnerPositionNeed(position: string, userTeam: UserTeam[]): number {\n    // Per principianti: conta solo i giocatori attuali per posizione\n    const currentCounts = {\n      P: 0, D: 0, C: 0, A: 0\n    };\n    \n    // Nota: In implementazione completa, si dovrebbe fare join con la tabella players\n    // Per ora usiamo una logica semplificata\n    \n    const targetCounts = { P: 3, D: 8, C: 8, A: 6 };\n    const currentCount = currentCounts[position as keyof typeof currentCounts] || 0;\n    const targetCount = targetCounts[position as keyof typeof targetCounts] || 0;\n    \n    // Priorità massima per posizioni completamente vuote\n    if (currentCount === 0) return 2.0;\n    \n    // Alta priorità per posizioni sotto il minimo\n    if (currentCount < Math.ceil(targetCount * 0.4)) return 1.8;\n    \n    // Media priorità per posizioni incomplete\n    if (currentCount < targetCount) return 1.3;\n    \n    // Bassa priorità per posizioni complete\n    return 0.7;\n  }\n\n  private generateBeginnerRecommendationReason(player: Player, userTeam: UserTeam[], teamStats: TeamStats): string {\n    const rating = parseFloat(player.rating);\n    const efficiency = player.matchesPlayed > 0 ? (player.goals + player.assists) / player.matchesPlayed : 0;\n    \n    const positionNames = { \n      P: \"Portiere\", \n      D: \"Difensore\", \n      C: \"Centrocampista\", \n      A: \"Attaccante\" \n    };\n    \n    const positionTips = {\n      P: \"🥅 I portieri guadagnano punti con parate e rigori parati. Cerca chi gioca sempre!\",\n      D: \"🛡️ I difensori prendono bonus con porta inviolata e gol. Scegli titolari delle big!\", \n      C: \"⚡ I centrocampisti sono jolly: assist, gol e gioco. I più affidabili per punti!\",\n      A: \"🚀 Gli attaccanti vivono di gol. Meglio 1 bomber da 40FM che 2 da 20FM!\"\n    };\n    \n    // Consigli specifici per principianti\n    if (userTeam.length === 0) {\n      return `🎯 PRIMO ACQUISTO: Inizia con ${player.name} (${positionNames[player.position as keyof typeof positionNames]})! Voto ${rating}, costa ${player.price}FM. ${positionTips[player.position as keyof typeof positionTips]}`;\n    }\n    \n    if (rating >= 7.5 && player.price <= 35) {\n      return `🌟 CAMPIONE ACCESSIBILE: ${player.name} è top player ma costa \"solo\" ${player.price}FM! Voto ${rating} garantito. ${positionTips[player.position as keyof typeof positionTips]}`;\n    } \n    \n    if (rating >= 7.0 && player.price <= 20) {\n      return `💎 AFFARE INCREDIBILE: ${player.name} vale molto di più! Voto ${rating} a ${player.price}FM. Ha fatto ${player.goals} gol e ${player.assists} assist. COMPRALO SUBITO!`;\n    } \n    \n    if (player.price <= 8 && rating >= 6.0) {\n      return `🎯 PERFETTO PER BUDGET: ${player.name} costa pochissimo (${player.price}FM) ma è affidabile (voto ${rating}). Ideale per completare la rosa senza rischi!`;\n    } \n    \n    if (player.goals >= 12) {\n      return `⚽ BOMBER VERO: ${player.name} ha già ${player.goals} gol! ${positionNames[player.position as keyof typeof positionNames]} che segna sempre. I gol valgono +3 punti ciascuno!`;\n    } \n    \n    if (player.assists >= 10) {\n      return `🎯 RE DEGLI ASSIST: ${player.name} ha servito ${player.assists} assist! Gli assist valgono +1 punto. ${positionNames[player.position as keyof typeof positionNames]} che fa giocare bene la squadra.`;\n    } \n    \n    if (player.matchesPlayed >= 20 && rating >= 6.5) {\n      return `🛡️ CERTEZZA ASSOLUTA: ${player.name} ha giocato ${player.matchesPlayed} partite (su 25 max)! Voto ${rating} stabile. Mai infortunato, sempre titolare.`;\n    } \n    \n    if (teamStats.remainingCredits < 50 && player.price <= 10) {\n      return `💸 PERFETTO PER FINIRE: Ti restano pochi crediti? ${player.name} costa solo ${player.price}FM ma ha voto ${rating}. Completa la rosa senza spendere troppo!`;\n    }\n    \n    return `📈 BUONA SCELTA: ${player.name} è un ${positionNames[player.position as keyof typeof positionNames]} solido. Voto ${rating}, ${player.goals} gol stagionali. A ${player.price}FM può essere un buon investimento per il futuro!`;\n  }\n\n  private generateAdvancedRecommendationReason(player: Player, userTeam: UserTeam[]): string {\n    const rating = parseFloat(player.rating);\n    const efficiency = player.matchesPlayed > 0 ? (player.goals + player.assists) / player.matchesPlayed : 0;\n    \n    const positionNames = { \n      P: \"Portiere\", \n      D: \"Difensore\", \n      C: \"Centrocampista\", \n      A: \"Attaccante\" \n    };\n    \n    const positionExplanations = {\n      P: \"I portieri sono fondamentali: parano i rigori e prendono voti alti con le parate\",\n      D: \"I difensori segnano punti con gol e mantenendo la porta inviolata\", \n      C: \"I centrocampisti sono versatili: assist, gol e tanto gioco\",\n      A: \"Gli attaccanti sono i bomber: segnano i gol che vincono le partite\"\n    };\n    \n    // Consigli per principianti con spiegazioni chiare\n    if (rating >= 7.5 && player.price <= 40) {\n      return `🌟 CAMPIONE: ${player.name} è uno dei migliori ${positionNames[player.position as keyof typeof positionNames]}! Ha un voto medio di ${rating} e costa solo ${player.price}FM. ${positionExplanations[player.position as keyof typeof positionExplanations]}. CONSIGLIO: Compralo subito!`;\n    } else if (rating >= 7.0 && player.price <= 25) {\n      return `💰 AFFARE: ${player.name} è un ottimo ${positionNames[player.position as keyof typeof positionNames]} con voto ${rating} a prezzo conveniente (${player.price}FM). Ha fatto ${player.goals} gol e ${player.assists} assist. Perfetto per iniziare!`;\n    } else if (player.price <= 10 && rating >= 6.0) {\n      return `🎯 BUDGET: ${player.name} costa poco (${player.price}FM) ma è affidabile (voto ${rating}). Ideale per completare la rosa senza spendere troppo. ${positionExplanations[player.position as keyof typeof positionExplanations]}.`;\n    } else if (player.goals >= 10 || player.assists >= 8) {\n      return `⚽ BOMBER: ${player.name} ha segnato ${player.goals} gol e fatto ${player.assists} assist! ${positionNames[player.position as keyof typeof positionNames]} molto produttivo. Costa ${player.price}FM ma i punti sono garantiti.`;\n    } else if (player.matchesPlayed >= 15 && rating >= 6.5) {\n      return `🛡️ SICURO: ${player.name} gioca sempre (${player.matchesPlayed} partite) e ha voto ${rating}. ${positionNames[player.position as keyof typeof positionNames]} affidabile che non ti deluderà. Prezzo: ${player.price}FM.`;\n    } else {\n      return `📈 POTENZIALE: ${player.name} è un ${positionNames[player.position as keyof typeof positionNames]} con buone prospettive. Voto ${rating}, ${player.goals} gol stagionali. Costa ${player.price}FM - potrebbe essere una scommessa vincente!`;\n    }\n  }\n\n  async getMarketActivity(): Promise<MarketActivity[]> {\n    // Mock recent market activity\n    return [\n      {\n        id: randomUUID(),\n        playerName: \"Rafael Leão\",\n        fromTeam: \"Milan\",\n        toTeam: \"Chelsea\", \n        price: 48,\n        timestamp: new Date(Date.now() - 2 * 60 * 1000),\n      },\n      {\n        id: randomUUID(),\n        playerName: \"Nicolò Zaniolo\",\n        fromTeam: \"Roma\",\n        toTeam: \"Aston Villa\",\n        price: 35,\n        timestamp: new Date(Date.now() - 5 * 60 * 1000),\n      },\n      {\n        id: randomUUID(),\n        playerName: \"Sergej Milinković-Savić\",\n        fromTeam: \"Lazio\",\n        toTeam: \"Al-Hilal\",\n        price: 40,\n        timestamp: new Date(Date.now() - 8 * 60 * 1000),\n      },\n    ];\n  }\n\n  async getFormations(userId: string): Promise<Formation[]> {\n    // Mock formations for demo\n    return [\n      {\n        id: \"formation-1\",\n        userId,\n        name: \"Formazione Principale\",\n        formation: \"3-5-2\",\n        playerIds: [],\n        isActive: true,\n        createdAt: new Date(),\n      },\n    ];\n  }\n\n  async saveFormation(userId: string, formationData: Omit<Formation, 'id' | 'userId' | 'createdAt'>): Promise<Formation> {\n    const formation: Formation = {\n      id: Date.now().toString(),\n      userId,\n      ...formationData,\n      createdAt: new Date(),\n    };\n    \n    console.log(\"Formation saved:\", formation);\n    return formation;\n  }\n\n  async getLeagueStandings(): Promise<LeagueStanding[]> {\n    // Mock league standings\n    return [\n      {\n        position: 1,\n        userId: \"user1\",\n        username: \"FantaExpert\",\n        totalPoints: 125,\n        matchesPlayed: 5,\n        wins: 4,\n        draws: 1,\n        losses: 0,\n      },\n      {\n        position: 2,\n        userId: \"user2\", \n        username: \"SerieAFan\",\n        totalPoints: 118,\n        matchesPlayed: 5,\n        wins: 3,\n        draws: 2,\n        losses: 0,\n      },\n      {\n        position: 3,\n        userId: \"user3\",\n        username: \"CalcioMaster\", \n        totalPoints: 112,\n        matchesPlayed: 5,\n        wins: 3,\n        draws: 1,\n        losses: 1,\n      },\n    ];\n  }\n\n  async getSerieACalendar(): Promise<Match[]> {\n    try {\n      // Check if matches already exist in database\n      const existingMatches = await db.select().from(matches).limit(1);\n      if (existingMatches.length === 0) {\n        // Initialize matches from API data\n        const calendarData = await footballDataService.getSerieACalendar();\n        if (calendarData.length > 0) {\n          await db.insert(matches).values(calendarData);\n        }\n      }\n\n      // Return all matches ordered by round and date\n      return await db.select().from(matches).orderBy(asc(matches.round), asc(matches.date));\n    } catch (error) {\n      console.error(\"Error fetching calendar:\", error);\n      return [];\n    }\n  }\n}\n\nexport const storage = new DatabaseStorage();","size_bytes":22365},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, decimal, timestamp, boolean, index, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table for OAuth\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// Updated users table for OAuth\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  username: varchar(\"username\").unique(),\n  password: text(\"password\"), // Optional for OAuth users\n  totalCredits: integer(\"total_credits\").notNull().default(500),\n  createdAt: timestamp(\"created_at\").notNull().default(sql`now()`),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const players = pgTable(\"players\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  position: varchar(\"position\", { length: 1 }).notNull(), // P, D, C, A\n  team: text(\"team\").notNull(),\n  price: integer(\"price\").notNull(),\n  rating: decimal(\"rating\", { precision: 3, scale: 1 }).notNull(),\n  goals: integer(\"goals\").notNull().default(0),\n  assists: integer(\"assists\").notNull().default(0),\n  yellowCards: integer(\"yellow_cards\").notNull().default(0),\n  redCards: integer(\"red_cards\").notNull().default(0),\n  matchesPlayed: integer(\"matches_played\").notNull().default(0),\n  isActive: boolean(\"is_active\").notNull().default(true),\n});\n\nexport const userTeams = pgTable(\"user_teams\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  playerId: varchar(\"player_id\").notNull().references(() => players.id),\n  purchasePrice: integer(\"purchase_price\").notNull(),\n  purchasedAt: timestamp(\"purchased_at\").notNull().default(sql`now()`),\n});\n\nexport const transactions = pgTable(\"transactions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  playerId: varchar(\"player_id\").notNull().references(() => players.id),\n  type: varchar(\"type\", { length: 10 }).notNull(), // BUY, SELL\n  amount: integer(\"amount\").notNull(),\n  createdAt: timestamp(\"created_at\").notNull().default(sql`now()`),\n});\n\nexport const matches = pgTable(\"matches\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  round: integer(\"round\").notNull(), // Giornata\n  homeTeam: text(\"home_team\").notNull(),\n  awayTeam: text(\"away_team\").notNull(),\n  homeScore: integer(\"home_score\"), // null se non giocata\n  awayScore: integer(\"away_score\"), // null se non giocata\n  date: timestamp(\"date\").notNull(),\n  status: varchar(\"status\", { length: 20 }).notNull().default(\"scheduled\"), // scheduled, live, finished, postponed\n  fantacalcioId: varchar(\"fantacalcio_id\").unique(), // ID dalla fonte esterna\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  totalCredits: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const upsertUserSchema = createInsertSchema(users).partial().required({\n  id: true,\n});\n\nexport const insertPlayerSchema = createInsertSchema(players).omit({\n  id: true,\n});\n\nexport const insertUserTeamSchema = createInsertSchema(userTeams).omit({\n  id: true,\n  purchasedAt: true,\n});\n\nexport const insertTransactionSchema = createInsertSchema(transactions).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertMatchSchema = createInsertSchema(matches).omit({\n  id: true,\n});\n\n// Types\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type UpsertUser = z.infer<typeof upsertUserSchema>;\nexport type Player = typeof players.$inferSelect;\nexport type InsertPlayer = z.infer<typeof insertPlayerSchema>;\nexport type UserTeam = typeof userTeams.$inferSelect;\nexport type InsertUserTeam = z.infer<typeof insertUserTeamSchema>;\nexport type Transaction = typeof transactions.$inferSelect;\nexport type InsertTransaction = z.infer<typeof insertTransactionSchema>;\nexport type Match = typeof matches.$inferSelect;\nexport type InsertMatch = z.infer<typeof insertMatchSchema>;\n\n// Additional types for API responses\nexport type TeamStats = {\n  playerCount: number;\n  spentCredits: number;\n  remainingCredits: number;\n  averageRating: number;\n  totalGoals: number;\n  totalAssists: number;\n};\n\nexport type PlayerRecommendation = {\n  player: Player;\n  reason: string;\n  valueScore: number;\n};\n\nexport type MarketActivity = {\n  id: string;\n  playerName: string;\n  fromTeam: string;\n  toTeam: string;\n  price: number;\n  timestamp: Date;\n};\n\nexport type Formation = {\n  id: string;\n  userId: string;\n  name: string;\n  formation: string; // e.g., \"3-5-2\", \"4-4-2\"\n  playerIds: string[];\n  isActive: boolean;\n  createdAt: Date;\n};\n\nexport type MatchSimulation = {\n  id: string;\n  userId: string;\n  opponentTeam: string;\n  userScore: number;\n  opponentScore: number;\n  fantasyPoints: number;\n  matchDate: Date;\n};\n\nexport type LeagueStanding = {\n  position: number;\n  userId: string;\n  username: string;\n  totalPoints: number;\n  matchesPlayed: number;\n  wins: number;\n  draws: number;\n  losses: number;\n};\n","size_bytes":5515},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport Dashboard from \"@/pages/dashboard\";\nimport Roster from \"@/pages/roster\";\nimport Market from \"@/pages/market\";\nimport Stats from \"@/pages/stats\";\nimport Simulation from \"@/pages/simulation\";\nimport Calendar from \"@/pages/calendar\";\nimport Landing from \"@/pages/landing\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  return (\n    <Switch>\n      {isLoading || !isAuthenticated ? (\n        <Route path=\"/\" component={Landing} />\n      ) : (\n        <>\n          <Route path=\"/\" component={Dashboard} />\n          <Route path=\"/roster\" component={Roster} />\n          <Route path=\"/market\" component={Market} />\n          <Route path=\"/stats\" component={Stats} />\n          <Route path=\"/calendar\" component={Calendar} />\n          <Route path=\"/simulation\" component={Simulation} />\n        </>\n      )}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Router />\n        <Toaster />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1460},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(210, 20%, 98%);\n  --foreground: hsl(220, 9%, 15%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(220, 9%, 15%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(220, 9%, 15%);\n  --primary: hsl(147, 86%, 19%);\n  --primary-foreground: hsl(0, 0%, 98%);\n  --secondary: hsl(210, 40%, 96%);\n  --secondary-foreground: hsl(220, 9%, 15%);\n  --muted: hsl(210, 40%, 96%);\n  --muted-foreground: hsl(220, 9%, 46%);\n  --accent: hsl(354, 70%, 54%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(220, 13%, 91%);\n  --input: hsl(220, 13%, 91%);\n  --ring: hsl(147, 86%, 19%);\n  --radius: 0.5rem;\n  --chart-1: hsl(12, 76%, 61%);\n  --chart-2: hsl(173, 58%, 39%);\n  --chart-3: hsl(197, 37%, 24%);\n  --chart-4: hsl(43, 74%, 66%);\n  --chart-5: hsl(27, 87%, 67%);\n  --font-sans: 'Inter', system-ui, sans-serif;\n  --sidebar: hsl(0, 0%, 100%);\n  --sidebar-foreground: hsl(220, 9%, 15%);\n  --sidebar-primary: hsl(147, 86%, 19%);\n  --sidebar-primary-foreground: hsl(0, 0%, 98%);\n  --sidebar-accent: hsl(210, 40%, 96%);\n  --sidebar-accent-foreground: hsl(147, 86%, 19%);\n  --sidebar-border: hsl(220, 13%, 91%);\n  --sidebar-ring: hsl(147, 86%, 19%);\n}\n\n.dark {\n  --background: hsl(220, 9%, 9%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(220, 9%, 12%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(220, 9%, 12%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(147, 86%, 19%);\n  --primary-foreground: hsl(0, 0%, 98%);\n  --secondary: hsl(220, 9%, 15%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --muted: hsl(220, 9%, 15%);\n  --muted-foreground: hsl(220, 9%, 63%);\n  --accent: hsl(354, 70%, 54%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --border: hsl(220, 9%, 18%);\n  --input: hsl(220, 9%, 18%);\n  --ring: hsl(147, 86%, 19%);\n  --sidebar: hsl(220, 9%, 12%);\n  --sidebar-foreground: hsl(210, 40%, 98%);\n  --sidebar-primary: hsl(147, 86%, 19%);\n  --sidebar-primary-foreground: hsl(0, 0%, 98%);\n  --sidebar-accent: hsl(220, 9%, 15%);\n  --sidebar-accent-foreground: hsl(147, 86%, 19%);\n  --sidebar-border: hsl(220, 9%, 18%);\n  --sidebar-ring: hsl(147, 86%, 19%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n.gradient-bg {\n  background: linear-gradient(135deg, hsl(147, 86%, 19%) 0%, hsl(147, 60%, 25%) 100%);\n}\n\n.flag-accent {\n  background: linear-gradient(to right, hsl(147, 86%, 19%) 33%, hsl(0, 0%, 100%) 33%, hsl(0, 0%, 100%) 66%, hsl(354, 70%, 54%) 66%);\n  height: 4px;\n}\n","size_bytes":2847},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/player-card.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport type { Player } from \"@shared/schema\";\n\ninterface PlayerCardProps {\n  player: Player;\n  onAction?: (player: Player) => void;\n  actionLabel?: string;\n  actionVariant?: \"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | \"link\";\n  showStats?: boolean;\n  purchasePrice?: number;\n}\n\nexport function PlayerCard({ \n  player, \n  onAction, \n  actionLabel = \"Acquista\",\n  actionVariant = \"default\",\n  showStats = false,\n  purchasePrice\n}: PlayerCardProps) {\n  const getPositionColor = (position: string) => {\n    switch (position) {\n      case \"P\": return \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\";\n      case \"D\": return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\";\n      case \"C\": return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\";\n      case \"A\": return \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\";\n      default: return \"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200\";\n    }\n  };\n\n  return (\n    <Card className=\"p-4 hover:shadow-md transition-shadow\" data-testid={`card-player-${player.id}`}>\n      <div className=\"flex items-center space-x-3\">\n        <Avatar className=\"h-12 w-12\">\n          <AvatarFallback className=\"text-sm font-semibold\">\n            {player.name.split(' ').map(n => n[0]).join('').slice(0, 2)}\n          </AvatarFallback>\n        </Avatar>\n        \n        <div className=\"flex-1\">\n          <div className=\"flex items-center justify-between\">\n            <h5 className=\"font-medium text-foreground\" data-testid={`text-player-name-${player.id}`}>\n              {player.name}\n            </h5>\n            <span className=\"text-sm font-bold text-primary\" data-testid={`text-player-price-${player.id}`}>\n              {purchasePrice || player.price}FM\n            </span>\n          </div>\n          \n          <div className=\"flex items-center justify-between text-sm text-muted-foreground mt-1\">\n            <div className=\"flex items-center space-x-2\">\n              <span \n                className={`px-2 py-0.5 rounded-full text-xs font-medium ${getPositionColor(player.position)}`}\n                data-testid={`text-player-position-${player.id}`}\n              >\n                {player.position}\n              </span>\n              <span data-testid={`text-player-team-${player.id}`}>{player.team}</span>\n            </div>\n            <span data-testid={`text-player-rating-${player.id}`}>⭐ {player.rating}</span>\n          </div>\n\n          {showStats && (\n            <div className=\"flex items-center space-x-4 mt-2 text-xs text-muted-foreground\">\n              <span data-testid={`text-player-goals-${player.id}`}>🥅 {player.goals}</span>\n              <span data-testid={`text-player-assists-${player.id}`}>🎯 {player.assists}</span>\n              <span data-testid={`text-player-matches-${player.id}`}>⚽ {player.matchesPlayed}</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {onAction && (\n        <Button \n          className=\"w-full mt-3\" \n          variant={actionVariant}\n          onClick={() => onAction(player)}\n          data-testid={`button-${actionLabel.toLowerCase()}-${player.id}`}\n        >\n          {actionLabel}\n        </Button>\n      )}\n    </Card>\n  );\n}\n","size_bytes":3426},"client/src/components/player-search.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Search } from \"lucide-react\";\nimport { PlayerCard } from \"./player-card\";\nimport type { Player } from \"@shared/schema\";\n\ninterface PlayerSearchProps {\n  onPlayerSelect?: (player: Player) => void;\n  excludePlayerIds?: string[];\n  actionLabel?: string;\n  actionVariant?: \"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | \"link\";\n}\n\nexport function PlayerSearch({ \n  onPlayerSelect, \n  excludePlayerIds = [],\n  actionLabel = \"Acquista\",\n  actionVariant = \"default\"\n}: PlayerSearchProps) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [position, setPosition] = useState(\"all\");\n  const [priceRange, setPriceRange] = useState(\"all\");\n\n  const { data: players = [], isLoading } = useQuery<Player[]>({\n    queryKey: [\"/api/players\", { \n      search: searchTerm || undefined,\n      position: position !== \"all\" ? position : undefined,\n      minPrice: priceRange === \"1-10\" ? 1 : priceRange === \"11-25\" ? 11 : priceRange === \"26-50\" ? 26 : priceRange === \"50+\" ? 50 : undefined,\n      maxPrice: priceRange === \"1-10\" ? 10 : priceRange === \"11-25\" ? 25 : priceRange === \"26-50\" ? 50 : undefined,\n    }],\n  });\n\n  const filteredPlayers = players.filter(player => !excludePlayerIds.includes(player.id));\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Search className=\"h-5 w-5\" />\n          Ricerca Giocatori\n        </CardTitle>\n        <CardDescription>\n          Trova i migliori giocatori per la tua rosa\n        </CardDescription>\n      </CardHeader>\n\n      <CardContent className=\"space-y-6\">\n        {/* Search Filters */}\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          <div className=\"relative flex-1\">\n            <Input\n              placeholder=\"Cerca per nome o squadra...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n              data-testid=\"input-player-search\"\n            />\n            <Search className=\"absolute left-3 top-2.5 h-5 w-5 text-muted-foreground\" />\n          </div>\n          \n          <Select value={position} onValueChange={setPosition}>\n            <SelectTrigger className=\"w-full sm:w-40\" data-testid=\"select-position\">\n              <SelectValue placeholder=\"Ruolo\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">Tutti i ruoli</SelectItem>\n              <SelectItem value=\"P\">Portiere</SelectItem>\n              <SelectItem value=\"D\">Difensore</SelectItem>\n              <SelectItem value=\"C\">Centrocampista</SelectItem>\n              <SelectItem value=\"A\">Attaccante</SelectItem>\n            </SelectContent>\n          </Select>\n          \n          <Select value={priceRange} onValueChange={setPriceRange}>\n            <SelectTrigger className=\"w-full sm:w-40\" data-testid=\"select-price-range\">\n              <SelectValue placeholder=\"Prezzo\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">Tutte le fasce</SelectItem>\n              <SelectItem value=\"1-10\">1-10FM</SelectItem>\n              <SelectItem value=\"11-25\">11-25FM</SelectItem>\n              <SelectItem value=\"26-50\">26-50FM</SelectItem>\n              <SelectItem value=\"50+\">50+FM</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n\n        {/* Results */}\n        {isLoading ? (\n          <div className=\"text-center py-8\" data-testid=\"loading-players\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\n            <p className=\"text-muted-foreground mt-2\">Caricamento giocatori...</p>\n          </div>\n        ) : filteredPlayers.length === 0 ? (\n          <div className=\"text-center py-8\" data-testid=\"no-players\">\n            <p className=\"text-muted-foreground\">Nessun giocatore trovato</p>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\" data-testid=\"players-grid\">\n            {filteredPlayers.slice(0, 12).map((player) => (\n              <PlayerCard\n                key={player.id}\n                player={player}\n                onAction={onPlayerSelect}\n                actionLabel={actionLabel}\n                actionVariant={actionVariant}\n                showStats={true}\n              />\n            ))}\n          </div>\n        )}\n\n        {filteredPlayers.length > 12 && (\n          <div className=\"text-center\">\n            <Button variant=\"outline\" data-testid=\"button-load-more\">\n              Carica altri giocatori\n            </Button>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":5051},"client/src/components/recommendation-card.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { TrendingUp } from \"lucide-react\";\nimport type { PlayerRecommendation } from \"@shared/schema\";\n\ninterface RecommendationCardProps {\n  recommendation: PlayerRecommendation;\n  onAddPlayer?: (recommendation: PlayerRecommendation) => void;\n}\n\nexport function RecommendationCard({ recommendation, onAddPlayer }: RecommendationCardProps) {\n  const { player, reason, valueScore } = recommendation;\n  const rating = parseFloat(player.rating);\n\n  return (\n    <Card className=\"p-4 hover:bg-muted/30 transition-colors\" data-testid={`card-recommendation-${player.id}`}>\n      <div className=\"flex items-center justify-between mb-2\">\n        <div className=\"flex items-center space-x-3\">\n          <Avatar className=\"h-12 w-12\">\n            <AvatarFallback className=\"text-sm font-semibold\">\n              {player.name.split(' ').map(n => n[0]).join('').slice(0, 2)}\n            </AvatarFallback>\n          </Avatar>\n          <div>\n            <h4 className=\"font-medium text-foreground\" data-testid={`text-recommendation-name-${player.id}`}>\n              {player.name}\n            </h4>\n            <span className=\"text-sm text-muted-foreground\" data-testid={`text-recommendation-position-${player.id}`}>\n              {player.position} - {player.team}\n            </span>\n          </div>\n        </div>\n        <div className=\"text-right\">\n          <span className=\"text-lg font-bold text-primary\" data-testid={`text-recommendation-price-${player.id}`}>\n            {player.price}FM\n          </span>\n          <div className=\"flex items-center text-xs text-chart-2 font-medium\">\n            <TrendingUp className=\"w-3 h-3 mr-1\" />\n            {Math.round(valueScore * 100)}% valore\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"text-sm text-muted-foreground mb-3 leading-relaxed\" data-testid={`text-recommendation-reason-${player.id}`}>\n        {reason}\n      </div>\n      \n      {/* Statistiche spiegate per principianti */}\n      <div className=\"grid grid-cols-2 gap-3 mb-3 text-xs\">\n        <div className=\"bg-muted/50 p-2 rounded\">\n          <span className=\"font-medium text-foreground\">Voto: {rating}</span>\n          <p className=\"text-muted-foreground\">Media voti stagionale</p>\n        </div>\n        <div className=\"bg-muted/50 p-2 rounded\">\n          <span className=\"font-medium text-foreground\">{player.goals}G + {player.assists}A</span>\n          <p className=\"text-muted-foreground\">Gol e assist (danno bonus)</p>\n        </div>\n      </div>\n      \n      {onAddPlayer && (\n        <Button \n          className=\"w-full\" \n          onClick={() => onAddPlayer(recommendation)}\n          data-testid={`button-add-recommendation-${player.id}`}\n        >\n          Aggiungi alla Rosa\n        </Button>\n      )}\n    </Card>\n  );\n}\n","size_bytes":2930},"client/src/components/team-performance-chart.tsx":{"content":"import { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport type { UserTeam, Player } from \"@shared/schema\";\n\ninterface TeamPerformanceChartProps {\n  userTeam: (UserTeam & { player: Player })[];\n}\n\nexport function TeamPerformanceChart({ userTeam }: TeamPerformanceChartProps) {\n  // Group players by position and calculate stats\n  const positionStats = userTeam.reduce((acc, ut) => {\n    const position = ut.player.position;\n    const positionName = {\n      P: 'Portieri',\n      D: 'Difensori', \n      C: 'Centrocampisti',\n      A: 'Attaccanti'\n    }[position] || position;\n    \n    if (!acc[positionName]) {\n      acc[positionName] = {\n        position: positionName,\n        count: 0,\n        totalRating: 0,\n        totalGoals: 0,\n        totalAssists: 0,\n        totalCost: 0,\n      };\n    }\n    \n    acc[positionName].count += 1;\n    acc[positionName].totalRating += parseFloat(ut.player.rating);\n    acc[positionName].totalGoals += ut.player.goals;\n    acc[positionName].totalAssists += ut.player.assists;\n    acc[positionName].totalCost += ut.purchasePrice;\n    \n    return acc;\n  }, {} as Record<string, any>);\n\n  const chartData = Object.values(positionStats).map((stats: any) => ({\n    position: stats.position,\n    'Media Rating': (stats.totalRating / stats.count).toFixed(1),\n    'Gol + Assist': stats.totalGoals + stats.totalAssists,\n    'Costo Medio': Math.round(stats.totalCost / stats.count),\n    'Giocatori': stats.count,\n  }));\n\n  if (chartData.length === 0) {\n    return (\n      <div className=\"text-center py-8 text-muted-foreground\">\n        Nessun dato disponibile per il grafico\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full h-64\" data-testid=\"team-performance-chart\">\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"position\" />\n          <YAxis />\n          <Tooltip \n            formatter={(value, name) => [value, name]}\n            labelFormatter={(label) => `Ruolo: ${label}`}\n          />\n          <Legend />\n          <Bar dataKey=\"Media Rating\" fill=\"hsl(var(--primary))\" />\n          <Bar dataKey=\"Gol + Assist\" fill=\"hsl(var(--chart-1))\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}","size_bytes":2387},"client/src/hooks/use-auth.tsx":{"content":"import { createContext, useContext, useState, useEffect } from \"react\";\nimport type { User } from \"@shared/schema\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ninterface AuthContextType {\n  user: User | null;\n  login: (username: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored user on mount\n    const storedUser = localStorage.getItem(\"fantacalcio_user\");\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    try {\n      const response = await apiRequest(\"POST\", \"/api/auth/login\", { username, password });\n      const data = await response.json();\n      setUser(data.user);\n      localStorage.setItem(\"fantacalcio_user\", JSON.stringify(data.user));\n    } catch (error) {\n      throw new Error(\"Invalid credentials\");\n    }\n  };\n\n  const register = async (username: string, email: string, password: string) => {\n    try {\n      const response = await apiRequest(\"POST\", \"/api/auth/register\", { username, email, password });\n      const data = await response.json();\n      setUser(data.user);\n      localStorage.setItem(\"fantacalcio_user\", JSON.stringify(data.user));\n    } catch (error) {\n      throw new Error(\"Registration failed\");\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"fantacalcio_user\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n","size_bytes":2113},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport type { User } from \"@shared/schema\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery<User>({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n}","size_bytes":306},"client/src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":115},"client/src/lib/mock-data.ts":{"content":"// This file is kept for reference but not used since we're using real backend data\nexport const mockPlayers = [];\n","size_bytes":115},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    let url = queryKey[0] as string;\n    \n    // Handle query parameters\n    if (queryKey.length > 1 && typeof queryKey[1] === 'object' && queryKey[1] !== null) {\n      const params = new URLSearchParams();\n      const paramObj = queryKey[1] as Record<string, any>;\n      Object.entries(paramObj).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          params.append(key, String(value));\n        }\n      });\n      if (params.toString()) {\n        url += '?' + params.toString();\n      }\n    } else if (queryKey.length > 1) {\n      // Join with slashes for path-like queryKeys\n      url = queryKey.filter(key => key != null).join(\"/\") as string;\n    }\n    \n    const res = await fetch(url, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":2049},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/dashboard.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Header } from \"@/components/layout/header\";\nimport { MobileNav } from \"@/components/layout/mobile-nav\";\nimport { PlayerCard } from \"@/components/player-card\";\nimport { RecommendationCard } from \"@/components/recommendation-card\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Users, TrendingUp, Target, BarChart3 } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { TeamStats, UserTeam, Player, PlayerRecommendation } from \"@shared/schema\";\n\nexport default function Dashboard() {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      window.location.href = \"/api/login\";\n    }\n  }, [isAuthenticated, isLoading]);\n\n  const { data: teamStats } = useQuery<TeamStats>({\n    queryKey: [\"/api/team\", user?.id, \"stats\"],\n    enabled: !!user?.id,\n  });\n\n  const { data: userTeam = [] } = useQuery<(UserTeam & { player: Player })[]>({\n    queryKey: [\"/api/team\", user?.id],\n    enabled: !!user?.id,\n  });\n\n  const { data: recommendations = [] } = useQuery<PlayerRecommendation[]>({\n    queryKey: [\"/api/recommendations\", user?.id],\n    enabled: !!user?.id,\n  });\n\n\n  const addPlayerMutation = useMutation({\n    mutationFn: async ({ playerId, price }: { playerId: string; price: number }) => {\n      const response = await apiRequest(\"POST\", `/api/team/${user?.id}/players`, {\n        playerId,\n        purchasePrice: price,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/team\", user?.id] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/team\", user?.id, \"stats\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/recommendations\", user?.id] });\n      toast({\n        title: \"Giocatore aggiunto\",\n        description: \"Il giocatore è stato aggiunto alla tua rosa!\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Errore\",\n        description: error.message || \"Impossibile aggiungere il giocatore\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  if (!user?.id) {\n    return null;\n  }\n\n  const handleAddRecommendation = (recommendation: PlayerRecommendation) => {\n    // Check if user has enough credits\n    if (!teamStats || teamStats.remainingCredits < recommendation.player.price) {\n      toast({\n        title: \"Crediti insufficienti\",\n        description: `Ti servono ${recommendation.player.price}FM ma hai solo ${teamStats?.remainingCredits || 0}FM`,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    addPlayerMutation.mutate({\n      playerId: recommendation.player.id,\n      price: recommendation.player.price,\n    });\n  };\n\n  const groupPlayersByPosition = (players: (UserTeam & { player: Player })[]) => {\n    return players.reduce((acc, ut) => {\n      const position = ut.player.position;\n      if (!acc[position]) acc[position] = [];\n      acc[position].push(ut);\n      return acc;\n    }, {} as Record<string, (UserTeam & { player: Player })[]>);\n  };\n\n  const playersByPosition = groupPlayersByPosition(userTeam);\n  const positionNames = { P: \"Portieri\", D: \"Difensori\", C: \"Centrocampisti\", A: \"Attaccanti\" };\n\n  return (\n    <div className=\"min-h-screen bg-background pb-20 md:pb-0\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Dashboard Overview */}\n        <div className=\"mb-8\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground\">Dashboard</h2>\n              <p className=\"text-muted-foreground mt-1\">Gestisci la tua squadra per la Serie A 2025/26 con dati reali aggiornati</p>\n            </div>\n            <div className=\"mt-4 lg:mt-0\">\n              <Button \n                onClick={() => setLocation(\"/market\")}\n                data-testid=\"button-add-player\"\n              >\n                Aggiungi Giocatore\n              </Button>\n            </div>\n          </div>\n\n          {/* Tutorial per Principianti */}\n          {userTeam.length === 0 && (\n            <Card className=\"mb-6 bg-gradient-to-r from-primary/10 to-primary/5 border-primary/20\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  🎓 Guida per Principianti\n                </CardTitle>\n                <CardDescription>\n                  Benvenuto nel Fantacalcio! Ecco come iniziare:\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <h4 className=\"font-semibold text-foreground\">🏗️ Come costruire la squadra:</h4>\n                    <ul className=\"text-sm text-muted-foreground space-y-1\">\n                      <li>• <strong>3 Portieri</strong> - Almeno uno titolare forte</li>\n                      <li>• <strong>8 Difensori</strong> - Mix di titolari e riserve</li>\n                      <li>• <strong>8 Centrocampisti</strong> - I più versatili</li>\n                      <li>• <strong>6 Attaccanti</strong> - I bomber che segnano</li>\n                    </ul>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <h4 className=\"font-semibold text-foreground\">💡 Consigli per vincere:</h4>\n                    <ul className=\"text-sm text-muted-foreground space-y-1\">\n                      <li>• Il <strong>voto</strong> è tutto: più alto = più punti</li>\n                      <li>• <strong>Gol e assist</strong> danno bonus speciali</li>\n                      <li>• Scegli giocatori che <strong>giocano sempre</strong></li>\n                      <li>• Bilancia: <strong>campioni costosi + affari</strong></li>\n                    </ul>\n                  </div>\n                </div>\n                <Button \n                  onClick={() => setLocation(\"/market\")}\n                  className=\"w-full mt-4\"\n                  data-testid=\"button-start-building\"\n                >\n                  🚀 Inizia a Costruire la Squadra\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Stats Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Giocatori in Rosa</p>\n                    <p className=\"text-2xl font-bold text-foreground\" data-testid=\"text-player-count\">\n                      {teamStats?.playerCount || 0}\n                    </p>\n                  </div>\n                  <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                    <Users className=\"w-6 h-6 text-primary\" />\n                  </div>\n                </div>\n                <div className=\"mt-4\">\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"text-chart-2 font-medium\">Max: 25</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Crediti Residui</p>\n                    <p className=\"text-2xl font-bold text-foreground\" data-testid=\"text-remaining-credits\">\n                      {teamStats?.remainingCredits || user.totalCredits}FM\n                    </p>\n                  </div>\n                  <div className=\"w-12 h-12 bg-chart-1/10 rounded-full flex items-center justify-center\">\n                    <TrendingUp className=\"w-6 h-6 text-chart-1\" />\n                  </div>\n                </div>\n                <div className=\"mt-4\">\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"text-muted-foreground\">Spesi: </span>\n                    <span className=\"text-accent font-medium ml-1\" data-testid=\"text-spent-credits\">\n                      {teamStats?.spentCredits || 0}FM\n                    </span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Media Voti</p>\n                    <p className=\"text-2xl font-bold text-foreground\" data-testid=\"text-average-rating\">\n                      {teamStats?.averageRating?.toFixed(1) || \"0.0\"}\n                    </p>\n                  </div>\n                  <div className=\"w-12 h-12 bg-chart-2/10 rounded-full flex items-center justify-center\">\n                    <BarChart3 className=\"w-6 h-6 text-chart-2\" />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-muted-foreground\">Gol + Assist</p>\n                    <p className=\"text-2xl font-bold text-foreground\" data-testid=\"text-total-goals-assists\">\n                      {(teamStats?.totalGoals || 0) + (teamStats?.totalAssists || 0)}\n                    </p>\n                  </div>\n                  <div className=\"w-12 h-12 bg-chart-4/10 rounded-full flex items-center justify-center\">\n                    <Target className=\"w-6 h-6 text-chart-4\" />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-8\">\n          {/* Team Roster */}\n          <div className=\"xl:col-span-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>La Mia Rosa</CardTitle>\n                <CardDescription>I tuoi giocatori divisi per ruolo</CardDescription>\n              </CardHeader>\n              <CardContent>\n                {userTeam.length === 0 ? (\n                  <div className=\"text-center py-8\" data-testid=\"empty-roster\">\n                    <Users className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\n                    <p className=\"text-muted-foreground\">Nessun giocatore in rosa</p>\n                    <Button \n                      className=\"mt-4\" \n                      onClick={() => setLocation(\"/market\")}\n                      data-testid=\"button-go-to-market\"\n                    >\n                      Vai al Mercato\n                    </Button>\n                  </div>\n                ) : (\n                  <div className=\"space-y-6\">\n                    {Object.entries(positionNames).map(([position, name]) => {\n                      const players = playersByPosition[position] || [];\n                      if (players.length === 0) return null;\n                      \n                      return (\n                        <div key={position}>\n                          <h4 className=\"text-sm font-semibold text-muted-foreground uppercase tracking-wide mb-3\">\n                            {name} ({players.length})\n                          </h4>\n                          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n                            {players.slice(0, 3).map((userTeam) => (\n                              <PlayerCard\n                                key={userTeam.id}\n                                player={userTeam.player}\n                                purchasePrice={userTeam.purchasePrice}\n                                showStats={true}\n                              />\n                            ))}\n                          </div>\n                          {players.length > 3 && (\n                            <div className=\"mt-3 text-center\">\n                              <Button \n                                variant=\"ghost\" \n                                size=\"sm\"\n                                onClick={() => setLocation(\"/roster\")}\n                                data-testid={`button-show-more-${position}`}\n                              >\n                                Mostra tutti i {name.toLowerCase()} ({players.length - 3} rimanenti)\n                              </Button>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-8\">\n            {/* Player Recommendations */}\n            <Card>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle className=\"text-lg\">🤖 Consigli AI per Principianti</CardTitle>\n                  <span className=\"bg-primary/10 text-primary text-xs px-2 py-1 rounded-full font-medium\">\n                    Intelligenza Artificiale\n                  </span>\n                </div>\n                <CardDescription>\n                  L'AI analizza tutti i giocatori e ti consiglia i migliori per la tua squadra\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {recommendations.slice(0, 3).map((recommendation) => (\n                    <RecommendationCard\n                      key={recommendation.player.id}\n                      recommendation={recommendation}\n                      onAddPlayer={handleAddRecommendation}\n                    />\n                  ))}\n                  {recommendations.length === 0 && (\n                    <div className=\"text-center py-6\" data-testid=\"no-recommendations\">\n                      <p className=\"text-muted-foreground mb-2\">Nessun consiglio disponibile</p>\n                      <p className=\"text-xs text-muted-foreground\">Aggiungi alcuni giocatori per ricevere consigli personalizzati</p>\n                    </div>\n                  )}\n                  {recommendations.length > 0 && (\n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full\"\n                      onClick={() => setLocation(\"/market\")}\n                      data-testid=\"button-see-all-recommendations\"\n                    >\n                      Vedi Tutti i Consigli nel Mercato\n                    </Button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Consigli Tattici */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">⚽ Consigli Tattici</CardTitle>\n                <CardDescription>\n                  Strategie per massimizzare i punti della tua squadra\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"p-4 bg-blue-50 dark:bg-blue-950/20 rounded-lg border border-blue-200 dark:border-blue-800\">\n                    <h4 className=\"font-semibold text-blue-800 dark:text-blue-200 mb-2\">\n                      🏆 Formazione 3-5-2 (Consigliata)\n                    </h4>\n                    <p className=\"text-sm text-blue-700 dark:text-blue-300\">\n                      La formazione più equilibrata: 3 difensori, 5 centrocampisti, 2 attaccanti. \n                      Perfetta per principianti perché i centrocampisti prendono voti più stabili.\n                    </p>\n                  </div>\n                  \n                  <div className=\"p-4 bg-green-50 dark:bg-green-950/20 rounded-lg border border-green-200 dark:border-green-800\">\n                    <h4 className=\"font-semibold text-green-800 dark:text-green-200 mb-2\">\n                      💰 Gestione Budget\n                    </h4>\n                    <p className=\"text-sm text-green-700 dark:text-green-300\">\n                      Regola d'oro: spendi 200-250FM per 2-3 campioni, poi completa con giocatori da 5-15FM. \n                      Non comprare solo stelle costose!\n                    </p>\n                  </div>\n                  \n                  <div className=\"p-4 bg-yellow-50 dark:bg-yellow-950/20 rounded-lg border border-yellow-200 dark:border-yellow-800\">\n                    <h4 className=\"font-semibold text-yellow-800 dark:text-yellow-200 mb-2\">\n                      🎯 Priorità Acquisti\n                    </h4>\n                    <p className=\"text-sm text-yellow-700 dark:text-yellow-300\">\n                      1° Portiere titolare forte, 2° Attaccanti che segnano sempre, \n                      3° Centrocampisti jolly, 4° Difensori delle big.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n          </div>\n        </div>\n      </main>\n\n      <MobileNav />\n    </div>\n  );\n}\n","size_bytes":17862},"client/src/pages/landing.tsx":{"content":"import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Trophy, Users, TrendingUp, Target, Play } from \"lucide-react\";\n\nexport default function Landing() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-primary/5 via-background to-chart-2/5\">\n      <div className=\"flag-accent\"></div>\n      \n      {/* Hero Section */}\n      <div className=\"relative\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n          <div className=\"text-center\">\n            <Badge className=\"mb-6 bg-primary/10 text-primary border-primary/20 px-4 py-2\">\n              ⚽ Fantasy Football Serie A\n            </Badge>\n            \n            <h1 className=\"text-5xl md:text-7xl font-bold text-foreground mb-6\">\n              FantaCalcio\n              <span className=\"text-primary\"> Serie A</span>\n            </h1>\n            \n            <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Crea la tua squadra dei sogni, acquista i migliori giocatori della Serie A \n              e sfida gli amici nel campionato di fantacalcio più avvincente d'Italia.\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button \n                size=\"lg\" \n                className=\"px-8 py-4 text-lg\"\n                onClick={() => window.location.href = \"/api/login\"}\n                data-testid=\"button-login\"\n              >\n                <Trophy className=\"w-5 h-5 mr-2\" />\n                Entra con Replit\n              </Button>\n              <Button \n                variant=\"outline\" \n                size=\"lg\" \n                className=\"px-8 py-4 text-lg\"\n                data-testid=\"button-learn-more\"\n              >\n                Scopri di più\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Features Section */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-4\">\n            Tutte le funzionalità che ti servono\n          </h2>\n          <p className=\"text-lg text-muted-foreground\">\n            Un'esperienza completa per gestire la tua squadra di fantacalcio\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          <Card className=\"text-center\">\n            <CardHeader>\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                <Users className=\"w-6 h-6 text-primary\" />\n              </div>\n              <CardTitle>Gestione Rosa</CardTitle>\n              <CardDescription>\n                Acquista e vendi giocatori, gestisci la tua formazione\n              </CardDescription>\n            </CardHeader>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardHeader>\n              <div className=\"w-12 h-12 bg-chart-1/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                <TrendingUp className=\"w-6 h-6 text-chart-1\" />\n              </div>\n              <CardTitle>Statistiche Live</CardTitle>\n              <CardDescription>\n                Dati in tempo reale della Serie A e analisi avanzate\n              </CardDescription>\n            </CardHeader>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardHeader>\n              <div className=\"w-12 h-12 bg-chart-2/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                <Target className=\"w-6 h-6 text-chart-2\" />\n              </div>\n              <CardTitle>Consigli AI</CardTitle>\n              <CardDescription>\n                Raccomandazioni intelligenti per migliorare la squadra\n              </CardDescription>\n            </CardHeader>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardHeader>\n              <div className=\"w-12 h-12 bg-chart-3/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                <Play className=\"w-6 h-6 text-chart-3\" />\n              </div>\n              <CardTitle>Simulazione</CardTitle>\n              <CardDescription>\n                Testa la tua squadra con partite simulate\n              </CardDescription>\n            </CardHeader>\n          </Card>\n        </div>\n      </div>\n\n      {/* CTA Section */}\n      <div className=\"bg-primary/5 py-20\">\n        <div className=\"max-w-4xl mx-auto text-center px-4 sm:px-6 lg:px-8\">\n          <h2 className=\"text-3xl font-bold text-foreground mb-4\">\n            Pronto a dominare la Serie A?\n          </h2>\n          <p className=\"text-lg text-muted-foreground mb-8\">\n            Inizia con 500FM di budget e costruisci la squadra perfetta\n          </p>\n          <Button \n            size=\"lg\" \n            className=\"px-8 py-4 text-lg\"\n            onClick={() => window.location.href = \"/api/login\"}\n            data-testid=\"button-start-now\"\n          >\n            <Trophy className=\"w-5 h-5 mr-2\" />\n            Inizia Ora - È Gratis!\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":5283},"client/src/pages/login.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useAuth } from \"@/hooks/use-auth\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function Login() {\n  const [, setLocation] = useLocation();\n  const { login, register } = useAuth();\n  const { toast } = useToast();\n  \n  const [loginData, setLoginData] = useState({ username: \"\", password: \"\" });\n  const [registerData, setRegisterData] = useState({ username: \"\", email: \"\", password: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    \n    try {\n      await login(loginData.username, loginData.password);\n      setLocation(\"/\");\n      toast({\n        title: \"Login successful\",\n        description: \"Welcome back to Fantacalcio Serie A!\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Login failed\",\n        description: \"Invalid username or password\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRegister = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    \n    try {\n      await register(registerData.username, registerData.email, registerData.password);\n      setLocation(\"/\");\n      toast({\n        title: \"Registration successful\",\n        description: \"Welcome to Fantacalcio Serie A! You have 500FM credits to start.\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Registration failed\",\n        description: \"Username or email already exists\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        <div className=\"flag-accent mb-6\"></div>\n        \n        <Card>\n          <CardHeader className=\"text-center\">\n            <div className=\"w-12 h-12 bg-primary rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg className=\"w-6 h-6 text-primary-foreground\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n              </svg>\n            </div>\n            <CardTitle className=\"text-2xl font-bold\">Fantacalcio Serie A</CardTitle>\n            <CardDescription>\n              Gestisci la tua squadra per la Serie A 2025/26 con dati reali\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent>\n            <Tabs defaultValue=\"login\" className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-2\">\n                <TabsTrigger value=\"login\" data-testid=\"tab-login\">Login</TabsTrigger>\n                <TabsTrigger value=\"register\" data-testid=\"tab-register\">Registrati</TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"login\">\n                <form onSubmit={handleLogin} className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"login-username\">Username</Label>\n                    <Input\n                      id=\"login-username\"\n                      data-testid=\"input-login-username\"\n                      type=\"text\"\n                      placeholder=\"Inserisci il tuo username\"\n                      value={loginData.username}\n                      onChange={(e) => setLoginData({ ...loginData, username: e.target.value })}\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"login-password\">Password</Label>\n                    <Input\n                      id=\"login-password\"\n                      data-testid=\"input-login-password\"\n                      type=\"password\"\n                      placeholder=\"Inserisci la tua password\"\n                      value={loginData.password}\n                      onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\n                      required\n                    />\n                  </div>\n\n                  <Button \n                    type=\"submit\" \n                    className=\"w-full\" \n                    disabled={isLoading}\n                    data-testid=\"button-login\"\n                  >\n                    {isLoading ? \"Accesso...\" : \"Accedi\"}\n                  </Button>\n                </form>\n              </TabsContent>\n\n              <TabsContent value=\"register\">\n                <form onSubmit={handleRegister} className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"register-username\">Username</Label>\n                    <Input\n                      id=\"register-username\"\n                      data-testid=\"input-register-username\"\n                      type=\"text\"\n                      placeholder=\"Scegli un username\"\n                      value={registerData.username}\n                      onChange={(e) => setRegisterData({ ...registerData, username: e.target.value })}\n                      required\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"register-email\">Email</Label>\n                    <Input\n                      id=\"register-email\"\n                      data-testid=\"input-register-email\"\n                      type=\"email\"\n                      placeholder=\"Inserisci la tua email\"\n                      value={registerData.email}\n                      onChange={(e) => setRegisterData({ ...registerData, email: e.target.value })}\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"register-password\">Password</Label>\n                    <Input\n                      id=\"register-password\"\n                      data-testid=\"input-register-password\"\n                      type=\"password\"\n                      placeholder=\"Crea una password\"\n                      value={registerData.password}\n                      onChange={(e) => setRegisterData({ ...registerData, password: e.target.value })}\n                      required\n                    />\n                  </div>\n\n                  <Button \n                    type=\"submit\" \n                    className=\"w-full\" \n                    disabled={isLoading}\n                    data-testid=\"button-register\"\n                  >\n                    {isLoading ? \"Registrazione...\" : \"Registrati\"}\n                  </Button>\n                </form>\n              </TabsContent>\n            </Tabs>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","size_bytes":7184},"client/src/pages/market.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Header } from \"@/components/layout/header\";\nimport { MobileNav } from \"@/components/layout/mobile-nav\";\nimport { PlayerSearch } from \"@/components/player-search\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { Player, UserTeam, TeamStats } from \"@shared/schema\";\n\nexport default function Market() {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      window.location.href = \"/api/login\";\n    }\n  }, [isAuthenticated, isLoading]);\n\n  const { data: userTeam = [] } = useQuery<(UserTeam & { player: Player })[]>({\n    queryKey: [\"/api/team\", user?.id],\n    enabled: !!user?.id,\n  });\n\n  const { data: teamStats } = useQuery<TeamStats>({\n    queryKey: [\"/api/team\", user?.id, \"stats\"],\n    enabled: !!user?.id,\n  });\n\n  const addPlayerMutation = useMutation({\n    mutationFn: async (player: Player) => {\n      const response = await apiRequest(\"POST\", `/api/team/${user?.id}/players`, {\n        playerId: player.id,\n        purchasePrice: player.price,\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/team\", user?.id] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/team\", user?.id, \"stats\"] });\n      toast({\n        title: \"Giocatore acquistato\",\n        description: \"Il giocatore è stato aggiunto alla tua rosa!\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Acquisto fallito\",\n        description: error.message || \"Impossibile acquistare il giocatore\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  if (!user?.id) {\n    return null;\n  }\n\n  const handlePlayerSelect = (player: Player) => {\n    // Check if user has enough credits\n    if (!teamStats || teamStats.remainingCredits < player.price) {\n      toast({\n        title: \"Crediti insufficienti\",\n        description: `Ti servono ${player.price}FM ma hai solo ${teamStats?.remainingCredits || 0}FM`,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Check if player is already in team\n    const alreadyOwned = userTeam.some(ut => ut.player.id === player.id);\n    if (alreadyOwned) {\n      toast({\n        title: \"Giocatore già in rosa\",\n        description: \"Questo giocatore è già nella tua squadra\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    addPlayerMutation.mutate(player);\n  };\n\n  const ownedPlayerIds = userTeam.map(ut => ut.player.id);\n\n  return (\n    <div className=\"min-h-screen bg-background pb-20 md:pb-0\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground\">Mercato</h2>\n              <p className=\"text-muted-foreground mt-1\">Trova i migliori giocatori per la tua rosa</p>\n            </div>\n            <div className=\"mt-4 lg:mt-0 flex items-center space-x-4\">\n              <div className=\"bg-muted px-4 py-2 rounded-lg\">\n                <span className=\"text-sm text-muted-foreground\">Crediti disponibili: </span>\n                <span className=\"text-lg font-semibold text-primary\" data-testid=\"text-available-credits\">\n                  {teamStats?.remainingCredits || 500}FM\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Market Info Card */}\n          <Card className=\"mb-8\">\n            <CardHeader>\n              <CardTitle>Informazioni Mercato</CardTitle>\n              <CardDescription>\n                Consigli per gli acquisti e regole del fantacalcio\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-primary\" data-testid=\"text-roster-count\">\n                    {userTeam.length}/25\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Giocatori in rosa</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-chart-2\">\n                    {teamStats?.averageRating?.toFixed(1) || \"0.0\"}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Media voti squadra</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-chart-4\">\n                    {(teamStats?.totalGoals || 0) + (teamStats?.totalAssists || 0)}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Gol + Assist totali</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Player Search */}\n          <PlayerSearch\n            onPlayerSelect={handlePlayerSelect}\n            excludePlayerIds={ownedPlayerIds}\n            actionLabel=\"Acquista\"\n            actionVariant=\"default\"\n          />\n        </div>\n      </main>\n\n      <MobileNav />\n    </div>\n  );\n}","size_bytes":5669},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/roster.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Header } from \"@/components/layout/header\";\nimport { MobileNav } from \"@/components/layout/mobile-nav\";\nimport { PlayerCard } from \"@/components/player-card\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Users, TrendingDown } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { UserTeam, Player } from \"@shared/schema\";\n\nexport default function Roster() {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [selectedPosition, setSelectedPosition] = useState(\"all\");\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      window.location.href = \"/api/login\";\n    }\n  }, [isAuthenticated, isLoading]);\n\n  const { data: userTeam = [], isLoading: isLoadingTeam } = useQuery<(UserTeam & { player: Player })[]>({\n    queryKey: [\"/api/team\", user?.id],\n    enabled: !!user?.id,\n  });\n\n  const removePlayerMutation = useMutation({\n    mutationFn: async (playerId: string) => {\n      const response = await apiRequest(\"DELETE\", `/api/team/${user?.id}/players/${playerId}`, {});\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/team\", user?.id] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/team\", user?.id, \"stats\"] });\n      toast({\n        title: \"Giocatore venduto\",\n        description: \"Il giocatore è stato rimosso dalla tua rosa\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Errore\",\n        description: error.message || \"Impossibile rimuovere il giocatore\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  if (!user?.id) {\n    return null;\n  }\n\n  const handleRemovePlayer = (player: Player) => {\n    if (confirm(`Sei sicuro di voler vendere ${player.name}?`)) {\n      removePlayerMutation.mutate(player.id);\n    }\n  };\n\n  const filteredPlayers = selectedPosition === \"all\" \n    ? userTeam \n    : userTeam.filter(ut => ut.player.position === selectedPosition);\n\n  const groupPlayersByPosition = (players: (UserTeam & { player: Player })[]) => {\n    return players.reduce((acc, ut) => {\n      const position = ut.player.position;\n      if (!acc[position]) acc[position] = [];\n      acc[position].push(ut);\n      return acc;\n    }, {} as Record<string, (UserTeam & { player: Player })[]>);\n  };\n\n  const playersByPosition = groupPlayersByPosition(userTeam);\n  const positionNames = { P: \"Portieri\", D: \"Difensori\", C: \"Centrocampisti\", A: \"Attaccanti\" };\n  const positionCounts = {\n    P: playersByPosition.P?.length || 0,\n    D: playersByPosition.D?.length || 0,\n    C: playersByPosition.C?.length || 0,\n    A: playersByPosition.A?.length || 0,\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background pb-20 md:pb-0\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground\">La Mia Rosa</h2>\n              <p className=\"text-muted-foreground mt-1\">Gestisci i tuoi giocatori e le formazioni</p>\n            </div>\n            <div className=\"mt-4 lg:mt-0\">\n              <Button onClick={() => setLocation(\"/market\")} data-testid=\"button-add-player\">\n                Aggiungi Giocatore\n              </Button>\n            </div>\n          </div>\n\n          {/* Position Tabs */}\n          <Tabs value={selectedPosition} onValueChange={setSelectedPosition} className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-5\">\n              <TabsTrigger value=\"all\" data-testid=\"tab-all\">\n                Tutti ({userTeam.length})\n              </TabsTrigger>\n              <TabsTrigger value=\"P\" data-testid=\"tab-goalkeeper\">\n                P ({positionCounts.P})\n              </TabsTrigger>\n              <TabsTrigger value=\"D\" data-testid=\"tab-defender\">\n                D ({positionCounts.D})\n              </TabsTrigger>\n              <TabsTrigger value=\"C\" data-testid=\"tab-midfielder\">\n                C ({positionCounts.C})\n              </TabsTrigger>\n              <TabsTrigger value=\"A\" data-testid=\"tab-forward\">\n                A ({positionCounts.A})\n              </TabsTrigger>\n            </TabsList>\n\n            <TabsContent value={selectedPosition} className=\"mt-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>\n                    {selectedPosition === \"all\" \n                      ? \"Tutti i Giocatori\" \n                      : `${positionNames[selectedPosition as keyof typeof positionNames]}`\n                    }\n                  </CardTitle>\n                  <CardDescription>\n                    {selectedPosition === \"all\" \n                      ? `${userTeam.length} giocatori in rosa`\n                      : `${filteredPlayers.length} ${positionNames[selectedPosition as keyof typeof positionNames]?.toLowerCase()}`\n                    }\n                  </CardDescription>\n                </CardHeader>\n\n                <CardContent>\n                  {isLoadingTeam ? (\n                    <div className=\"text-center py-8\" data-testid=\"loading-roster\">\n                      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto\"></div>\n                      <p className=\"text-muted-foreground mt-2\">Caricamento rosa...</p>\n                    </div>\n                  ) : filteredPlayers.length === 0 ? (\n                    <div className=\"text-center py-8\" data-testid=\"empty-roster\">\n                      <Users className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\n                      <p className=\"text-muted-foreground mb-4\">\n                        {selectedPosition === \"all\" \n                          ? \"Nessun giocatore in rosa\"\n                          : `Nessun ${positionNames[selectedPosition as keyof typeof positionNames]?.toLowerCase()?.slice(0, -1)}e in rosa`\n                        }\n                      </p>\n                      <Button onClick={() => setLocation(\"/market\")} data-testid=\"button-go-to-market\">\n                        Vai al Mercato\n                      </Button>\n                    </div>\n                  ) : (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\" data-testid=\"roster-grid\">\n                      {filteredPlayers.map((userTeam) => (\n                        <PlayerCard\n                          key={userTeam.id}\n                          player={userTeam.player}\n                          purchasePrice={userTeam.purchasePrice}\n                          onAction={handleRemovePlayer}\n                          actionLabel=\"Vendi\"\n                          actionVariant=\"destructive\"\n                          showStats={true}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </div>\n\n        {/* Position Requirements Info */}\n        {userTeam.length > 0 && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <TrendingDown className=\"h-5 w-5\" />\n                Requisiti Formazione\n              </CardTitle>\n              <CardDescription>\n                Assicurati di avere abbastanza giocatori per ogni ruolo\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                {Object.entries(positionNames).map(([position, name]) => {\n                  const count = positionCounts[position as keyof typeof positionCounts];\n                  const minRequired = position === \"P\" ? 3 : position === \"D\" ? 8 : position === \"C\" ? 8 : 6;\n                  const isComplete = count >= minRequired;\n                  \n                  return (\n                    <div \n                      key={position} \n                      className={`p-4 rounded-lg border ${isComplete ? 'bg-green-50 border-green-200 dark:bg-green-950 dark:border-green-800' : 'bg-orange-50 border-orange-200 dark:bg-orange-950 dark:border-orange-800'}`}\n                      data-testid={`position-requirement-${position}`}\n                    >\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold\">\n                          {count}/{minRequired}\n                        </div>\n                        <div className=\"text-sm font-medium\">{name}</div>\n                        <div className={`text-xs mt-1 ${isComplete ? 'text-green-600 dark:text-green-400' : 'text-orange-600 dark:text-orange-400'}`}>\n                          {isComplete ? 'Completo' : `Servono ${minRequired - count}`}\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </main>\n\n      <MobileNav />\n    </div>\n  );\n}","size_bytes":9641},"client/src/pages/simulation.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Header } from \"@/components/layout/header\";\nimport { MobileNav } from \"@/components/layout/mobile-nav\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Play, Trophy, Target, Users } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { TeamStats, UserTeam, Player } from \"@shared/schema\";\n\ninterface SimulationResult {\n  userFormation: string;\n  opponentTeam: string;\n  userScore: number;\n  opponentScore: number;\n  fantasyPoints: number;\n  topPerformer: Player;\n  matchEvents: string[];\n}\n\nexport default function Simulation() {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const [simulationResult, setSimulationResult] = useState<SimulationResult | null>(null);\n  const [isSimulating, setIsSimulating] = useState(false);\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      window.location.href = \"/api/login\";\n    }\n  }, [isAuthenticated, isLoading]);\n\n  const { data: teamStats } = useQuery<TeamStats>({\n    queryKey: [\"/api/team\", user?.id, \"stats\"],\n    enabled: !!user?.id,\n  });\n\n  const { data: userTeam = [] } = useQuery<(UserTeam & { player: Player })[]>({\n    queryKey: [\"/api/team\", user?.id],\n    enabled: !!user?.id,\n  });\n\n  if (!user?.id) {\n    return null;\n  }\n\n  const serieATeams = [\n    \"Inter\", \"Milan\", \"Juventus\", \"Napoli\", \"Atalanta\", \"Roma\", \"Lazio\", \n    \"Fiorentina\", \"Bologna\", \"Torino\", \"Udinese\", \"Sassuolo\", \"Verona\", \n    \"Genoa\", \"Cagliari\", \"Empoli\", \"Venezia\", \"Spezia\", \"Salernitana\", \"Monza\"\n  ];\n\n  const simulateMatch = () => {\n    if (userTeam.length < 11) {\n      toast({\n        title: \"Rosa incompleta\",\n        description: \"Ti servono almeno 11 giocatori per simulare una partita\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsSimulating(true);\n    \n    // Simulate match after 2 seconds\n    setTimeout(() => {\n      const opponentTeam = serieATeams[Math.floor(Math.random() * serieATeams.length)];\n      \n      // Calculate team strength based on average rating\n      const teamStrength = teamStats?.averageRating || 6.5;\n      const opponentStrength = 6.0 + Math.random() * 2; // Random between 6.0-8.0\n      \n      // Simulate goals (0-4 each team)\n      const userGoalChance = Math.max(0.1, (teamStrength - 5) / 4);\n      const opponentGoalChance = Math.max(0.1, (opponentStrength - 5) / 4);\n      \n      const userScore = Math.floor(Math.random() * 5 * userGoalChance);\n      const opponentScore = Math.floor(Math.random() * 5 * opponentGoalChance);\n      \n      // Calculate fantasy points based on individual player performance\n      let fantasyPoints = 0;\n      const matchEvents: string[] = [];\n      \n      // Get best 11 players for simulation\n      const bestEleven = userTeam\n        .sort((a, b) => parseFloat(b.player.rating) - parseFloat(a.player.rating))\n        .slice(0, 11);\n      \n      bestEleven.forEach(ut => {\n        const player = ut.player;\n        const rating = parseFloat(player.rating);\n        const basePoints = Math.max(4, rating); // Base points from rating\n        \n        // Random performance variation\n        const performance = 0.8 + Math.random() * 0.4; // 0.8 to 1.2\n        const playerPoints = Math.round(basePoints * performance);\n        fantasyPoints += playerPoints;\n        \n        // Generate some match events\n        if (Math.random() < 0.3 && player.position === 'A') {\n          matchEvents.push(`⚽ Gol di ${player.name}!`);\n        }\n        if (Math.random() < 0.2) {\n          matchEvents.push(`🎯 Assist di ${player.name}`);\n        }\n        if (Math.random() < 0.1) {\n          matchEvents.push(`🟨 Ammonizione per ${player.name}`);\n        }\n      });\n      \n      const topPerformer = bestEleven.reduce((best, ut) => \n        parseFloat(ut.player.rating) > parseFloat(best.player.rating) ? ut : best\n      ).player;\n      \n      const result: SimulationResult = {\n        userFormation: \"4-3-3\", // Default formation\n        opponentTeam,\n        userScore,\n        opponentScore,\n        fantasyPoints: Math.round(fantasyPoints),\n        topPerformer,\n        matchEvents: matchEvents.slice(0, 5)\n      };\n      \n      setSimulationResult(result);\n      setIsSimulating(false);\n      \n      // Show result toast\n      const resultText = userScore > opponentScore ? \"Vittoria!\" : \n                        userScore === opponentScore ? \"Pareggio!\" : \"Sconfitta!\";\n      \n      toast({\n        title: `${resultText} ${userScore}-${opponentScore}`,\n        description: `Hai totalizzato ${fantasyPoints} punti fantacalcio`,\n      });\n    }, 2000);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background pb-20 md:pb-0\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground\">Simulazione Partite</h2>\n              <p className=\"text-muted-foreground mt-1\">Testa la tua squadra contro avversari di Serie A</p>\n            </div>\n          </div>\n\n          {/* Team Readiness */}\n          <Card className=\"mb-8\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Users className=\"h-5 w-5\" />\n                Stato Squadra\n              </CardTitle>\n              <CardDescription>Verifica se la tua rosa è pronta per giocare</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center p-4 bg-muted rounded-lg\">\n                  <div className=\"text-2xl font-bold text-foreground\">\n                    {userTeam.length}/25\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Giocatori Totali</div>\n                  <Progress \n                    value={(userTeam.length / 25) * 100} \n                    className=\"mt-2\"\n                    data-testid=\"progress-total-players\"\n                  />\n                </div>\n                \n                <div className=\"text-center p-4 bg-muted rounded-lg\">\n                  <div className=\"text-2xl font-bold text-primary\">\n                    {teamStats?.averageRating?.toFixed(1) || \"0.0\"}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Media Voti</div>\n                  <div className={`text-xs mt-1 ${(teamStats?.averageRating || 0) >= 6.5 ? 'text-green-600' : 'text-orange-600'}`}>\n                    {(teamStats?.averageRating || 0) >= 6.5 ? 'Buona qualità' : 'Migliorabile'}\n                  </div>\n                </div>\n                \n                <div className=\"text-center p-4 bg-muted rounded-lg\">\n                  <div className=\"text-2xl font-bold text-chart-1\">\n                    {Math.min(11, userTeam.length)}/11\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\">Titolari Disponibili</div>\n                  <div className={`text-xs mt-1 ${userTeam.length >= 11 ? 'text-green-600' : 'text-orange-600'}`}>\n                    {userTeam.length >= 11 ? 'Pronto per giocare' : 'Servono altri giocatori'}\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Simulation Controls */}\n          <Card className=\"mb-8\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Play className=\"h-5 w-5\" />\n                Simula Partita\n              </CardTitle>\n              <CardDescription>\n                Gioca una partita virtuale contro una squadra di Serie A\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center\">\n                <Button \n                  size=\"lg\"\n                  onClick={simulateMatch}\n                  disabled={isSimulating || userTeam.length < 11}\n                  className=\"px-8 py-4\"\n                  data-testid=\"button-simulate-match\"\n                >\n                  {isSimulating ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n                      Simulazione in corso...\n                    </>\n                  ) : (\n                    <>\n                      <Play className=\"w-5 h-5 mr-2\" />\n                      Gioca Partita\n                    </>\n                  )}\n                </Button>\n                \n                {userTeam.length < 11 && (\n                  <p className=\"text-sm text-muted-foreground mt-2\">\n                    Ti servono almeno 11 giocatori per simulare una partita\n                  </p>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Simulation Result */}\n          {simulationResult && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Trophy className=\"h-5 w-5\" />\n                  Risultato Partita\n                </CardTitle>\n                <CardDescription>\n                  La tua squadra vs {simulationResult.opponentTeam}\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Score */}\n                  <div className=\"text-center py-6 bg-muted rounded-lg\">\n                    <div className=\"text-4xl font-bold text-foreground mb-2\">\n                      {simulationResult.userScore} - {simulationResult.opponentScore}\n                    </div>\n                    <div className=\"text-lg\">\n                      <span className=\"font-semibold\">{user.firstName || user.email}</span>\n                      <span className=\"text-muted-foreground mx-2\">vs</span>\n                      <span className=\"font-semibold\">{simulationResult.opponentTeam}</span>\n                    </div>\n                    <Badge \n                      variant={\n                        simulationResult.userScore > simulationResult.opponentScore ? \"default\" : \n                        simulationResult.userScore === simulationResult.opponentScore ? \"secondary\" : \"destructive\"\n                      }\n                      className=\"mt-2\"\n                    >\n                      {simulationResult.userScore > simulationResult.opponentScore ? \"VITTORIA\" : \n                       simulationResult.userScore === simulationResult.opponentScore ? \"PAREGGIO\" : \"SCONFITTA\"}\n                    </Badge>\n                  </div>\n\n                  {/* Fantasy Points */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"text-center p-6 bg-primary/10 rounded-lg\">\n                      <div className=\"text-3xl font-bold text-primary\">\n                        {simulationResult.fantasyPoints}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Punti Fantacalcio</div>\n                      <div className={`text-xs mt-1 ${simulationResult.fantasyPoints >= 70 ? 'text-green-600' : simulationResult.fantasyPoints >= 60 ? 'text-yellow-600' : 'text-red-600'}`}>\n                        {simulationResult.fantasyPoints >= 70 ? 'Eccellente' : simulationResult.fantasyPoints >= 60 ? 'Buono' : 'Migliorabile'}\n                      </div>\n                    </div>\n\n                    <div className=\"text-center p-6 bg-chart-2/10 rounded-lg\">\n                      <div className=\"text-lg font-bold text-chart-2\">\n                        ⭐ {simulationResult.topPerformer.name}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Migliore in Campo</div>\n                      <div className=\"text-xs mt-1 text-chart-2\">\n                        Rating {simulationResult.topPerformer.rating}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Match Events */}\n                  {simulationResult.matchEvents.length > 0 && (\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-3\">Eventi Partita</h4>\n                      <div className=\"space-y-2\">\n                        {simulationResult.matchEvents.map((event, index) => (\n                          <div \n                            key={index} \n                            className=\"flex items-center space-x-2 p-2 bg-muted rounded\"\n                            data-testid={`match-event-${index}`}\n                          >\n                            <div className=\"w-2 h-2 bg-primary rounded-full\"></div>\n                            <span className=\"text-sm\">{event}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Actions */}\n                  <div className=\"flex justify-center space-x-4\">\n                    <Button \n                      onClick={simulateMatch}\n                      disabled={isSimulating}\n                      data-testid=\"button-simulate-again\"\n                    >\n                      Simula Altra Partita\n                    </Button>\n                    <Button \n                      variant=\"outline\"\n                      onClick={() => setLocation(\"/roster\")}\n                      data-testid=\"button-improve-team\"\n                    >\n                      Migliora Squadra\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Formation Suggestions */}\n          <Card className=\"mt-8\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Target className=\"h-5 w-5\" />\n                Suggerimenti Tattici\n              </CardTitle>\n              <CardDescription>\n                Consigli per migliorare le performance della tua squadra\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <h4 className=\"font-semibold\">Punti di Forza</h4>\n                  <div className=\"space-y-2\">\n                    {teamStats && teamStats.averageRating >= 7.0 && (\n                      <div className=\"flex items-center space-x-2 text-green-600\">\n                        <div className=\"w-2 h-2 bg-green-600 rounded-full\"></div>\n                        <span className=\"text-sm\">Ottima qualità media ({teamStats.averageRating.toFixed(1)})</span>\n                      </div>\n                    )}\n                    {teamStats && teamStats.totalGoals >= 10 && (\n                      <div className=\"flex items-center space-x-2 text-green-600\">\n                        <div className=\"w-2 h-2 bg-green-600 rounded-full\"></div>\n                        <span className=\"text-sm\">Attacco prolifico ({teamStats.totalGoals} gol)</span>\n                      </div>\n                    )}\n                    {userTeam.length >= 20 && (\n                      <div className=\"flex items-center space-x-2 text-green-600\">\n                        <div className=\"w-2 h-2 bg-green-600 rounded-full\"></div>\n                        <span className=\"text-sm\">Rosa completa e profonda</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <h4 className=\"font-semibold\">Aree di Miglioramento</h4>\n                  <div className=\"space-y-2\">\n                    {userTeam.length < 15 && (\n                      <div className=\"flex items-center space-x-2 text-orange-600\">\n                        <div className=\"w-2 h-2 bg-orange-600 rounded-full\"></div>\n                        <span className=\"text-sm\">Serve più profondità nella rosa</span>\n                      </div>\n                    )}\n                    {teamStats && teamStats.averageRating < 6.5 && (\n                      <div className=\"flex items-center space-x-2 text-orange-600\">\n                        <div className=\"w-2 h-2 bg-orange-600 rounded-full\"></div>\n                        <span className=\"text-sm\">Qualità media migliorabile</span>\n                      </div>\n                    )}\n                    {teamStats && (teamStats.totalGoals + teamStats.totalAssists) < 15 && (\n                      <div className=\"flex items-center space-x-2 text-orange-600\">\n                        <div className=\"w-2 h-2 bg-orange-600 rounded-full\"></div>\n                        <span className=\"text-sm\">Servono più giocatori offensivi</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n\n      <MobileNav />\n    </div>\n  );\n}","size_bytes":17543},"client/src/pages/stats.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Header } from \"@/components/layout/header\";\nimport { MobileNav } from \"@/components/layout/mobile-nav\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { BarChart3, TrendingUp, Target, Users, RefreshCw } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { TeamPerformanceChart } from \"@/components/team-performance-chart\";\nimport type { TeamStats, UserTeam, Player, Transaction } from \"@shared/schema\";\n\nexport default function Stats() {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      window.location.href = \"/api/login\";\n    }\n  }, [isAuthenticated, isLoading]);\n\n  const { data: teamStats } = useQuery<TeamStats>({\n    queryKey: [\"/api/team\", user?.id, \"stats\"],\n    enabled: !!user?.id,\n  });\n\n  const { data: userTeam = [] } = useQuery<(UserTeam & { player: Player })[]>({\n    queryKey: [\"/api/team\", user?.id],\n    enabled: !!user?.id,\n  });\n\n  const { data: transactions = [] } = useQuery<Transaction[]>({\n    queryKey: [\"/api/transactions\", user?.id],\n    enabled: !!user?.id,\n  });\n\n  const refreshPlayersMutation = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest(\"POST\", \"/api/admin/refresh-players\", {});\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/players\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/recommendations\", user?.id] });\n      toast({\n        title: \"Dati aggiornati\",\n        description: \"Rose e statistiche Serie A 2025/26 aggiornate con dati reali\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Errore aggiornamento\",\n        description: \"Impossibile aggiornare i dati dei giocatori\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  if (!user?.id) {\n    return null;\n  }\n\n  // Position distribution\n  const positionCounts = userTeam.reduce((acc, ut) => {\n    acc[ut.player.position] = (acc[ut.player.position] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n\n  const positionData = [\n    { position: \"P\", name: \"Portieri\", count: positionCounts.P || 0, min: 3, max: 3, color: \"bg-blue-500\" },\n    { position: \"D\", name: \"Difensori\", count: positionCounts.D || 0, min: 8, max: 8, color: \"bg-green-500\" },\n    { position: \"C\", name: \"Centrocampisti\", count: positionCounts.C || 0, min: 8, max: 8, color: \"bg-yellow-500\" },\n    { position: \"A\", name: \"Attaccanti\", count: positionCounts.A || 0, min: 6, max: 6, color: \"bg-red-500\" },\n  ];\n\n  // Top performers\n  const topPerformers = userTeam\n    .sort((a, b) => parseFloat(b.player.rating) - parseFloat(a.player.rating))\n    .slice(0, 5);\n\n  // Recent transactions\n  const recentTransactions = transactions\n    .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n    .slice(0, 5);\n\n  return (\n    <div className=\"min-h-screen bg-background pb-20 md:pb-0\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground\">Statistiche Avanzate</h2>\n              <p className=\"text-muted-foreground mt-1\">Analisi dettagliata della tua squadra</p>\n            </div>\n            <div className=\"mt-4 lg:mt-0\">\n              <Button \n                onClick={() => refreshPlayersMutation.mutate()}\n                disabled={refreshPlayersMutation.isPending}\n                data-testid=\"button-refresh-data\"\n              >\n                <RefreshCw className={`w-4 h-4 mr-2 ${refreshPlayersMutation.isPending ? 'animate-spin' : ''}`} />\n                Aggiorna da Serie A\n              </Button>\n            </div>\n          </div>\n\n          <Tabs defaultValue=\"overview\" className=\"w-full\">\n            <TabsList className=\"grid w-full grid-cols-4\">\n              <TabsTrigger value=\"overview\" data-testid=\"tab-overview\">Panoramica</TabsTrigger>\n              <TabsTrigger value=\"formations\" data-testid=\"tab-formations\">Formazioni</TabsTrigger>\n              <TabsTrigger value=\"performance\" data-testid=\"tab-performance\">Performance</TabsTrigger>\n              <TabsTrigger value=\"transactions\" data-testid=\"tab-transactions\">Transazioni</TabsTrigger>\n            </TabsList>\n\n            {/* Overview Tab */}\n            <TabsContent value=\"overview\" className=\"mt-6\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                {/* Position Distribution */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Users className=\"h-5 w-5\" />\n                      Distribuzione Ruoli\n                    </CardTitle>\n                    <CardDescription>Composizione della tua rosa per ruolo</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      {positionData.map(({ position, name, count, min, max, color }) => (\n                        <div key={position} className=\"space-y-2\">\n                          <div className=\"flex items-center justify-between\">\n                            <span className=\"text-sm font-medium\">{name}</span>\n                            <span className={`text-sm ${count >= min ? 'text-green-600' : 'text-orange-600'}`}>\n                              {count}/{max}\n                            </span>\n                          </div>\n                          <Progress \n                            value={(count / max) * 100} \n                            className=\"h-2\"\n                            data-testid={`progress-${position}`}\n                          />\n                          <div className=\"flex justify-between text-xs text-muted-foreground\">\n                            <span>Minimo: {min}</span>\n                            <span className={count >= min ? 'text-green-600' : 'text-orange-600'}>\n                              {count >= min ? '✓ Completo' : `Servono ${min - count}`}\n                            </span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Team Value Analysis */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <TrendingUp className=\"h-5 w-5\" />\n                      Analisi Valore Rosa\n                    </CardTitle>\n                    <CardDescription>Investimenti e rendimento della squadra</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-6\">\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div className=\"text-center p-4 bg-muted rounded-lg\">\n                          <div className=\"text-2xl font-bold text-primary\">\n                            {teamStats?.spentCredits || 0}FM\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">Spesi</div>\n                        </div>\n                        <div className=\"text-center p-4 bg-muted rounded-lg\">\n                          <div className=\"text-2xl font-bold text-chart-2\">\n                            {teamStats?.remainingCredits || 500}FM\n                          </div>\n                          <div className=\"text-sm text-muted-foreground\">Disponibili</div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between text-sm\">\n                          <span>Budget utilizzato</span>\n                          <span>{Math.round(((teamStats?.spentCredits || 0) / 500) * 100)}%</span>\n                        </div>\n                        <Progress \n                          value={((teamStats?.spentCredits || 0) / 500) * 100} \n                          className=\"h-2\"\n                          data-testid=\"progress-budget\"\n                        />\n                      </div>\n\n                      <div className=\"text-center\">\n                        <div className=\"text-lg font-semibold text-foreground\">\n                          Media Valore: {userTeam.length > 0 ? Math.round((teamStats?.spentCredits || 0) / userTeam.length) : 0}FM\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">per giocatore</div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n\n            {/* Formations Tab */}\n            <TabsContent value=\"formations\" className=\"mt-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Formazioni Tattiche</CardTitle>\n                  <CardDescription>\n                    Configura le formazioni per ottimizzare la tua squadra\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {['3-5-2', '4-4-2', '4-3-3', '3-4-3', '5-3-2', '4-5-1'].map((formation) => (\n                      <Card key={formation} className=\"cursor-pointer hover:bg-muted/30 transition-colors\">\n                        <CardContent className=\"p-6 text-center\">\n                          <div className=\"text-2xl font-bold text-primary mb-2\">{formation}</div>\n                          <div className=\"text-sm text-muted-foreground mb-4\">\n                            {formation === '3-5-2' && 'Equilibrata - Controllo a centrocampo'}\n                            {formation === '4-4-2' && 'Classica - Solidità difensiva'}\n                            {formation === '4-3-3' && 'Offensiva - Ampiezza sulle fasce'}\n                            {formation === '3-4-3' && 'Aggressiva - Pressing alto'}\n                            {formation === '5-3-2' && 'Difensiva - Contropiede'}\n                            {formation === '4-5-1' && 'Conservativa - Mediana folta'}\n                          </div>\n                          <Button \n                            variant=\"outline\" \n                            size=\"sm\"\n                            data-testid={`button-formation-${formation}`}\n                          >\n                            Seleziona\n                          </Button>\n                        </CardContent>\n                      </Card>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            {/* Performance Tab */}\n            <TabsContent value=\"performance\" className=\"mt-6\">\n              <div className=\"space-y-8\">\n                {/* Performance Chart */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <BarChart3 className=\"h-5 w-5\" />\n                      Analisi Performance per Ruolo\n                    </CardTitle>\n                    <CardDescription>Statistiche comparative dei tuoi giocatori</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <TeamPerformanceChart userTeam={userTeam} />\n                  </CardContent>\n                </Card>\n\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                  {/* Top Performers */}\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Target className=\"h-5 w-5\" />\n                        Top Performers\n                      </CardTitle>\n                      <CardDescription>I migliori giocatori della tua rosa</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        {topPerformers.map((ut, index) => (\n                          <div \n                            key={ut.id} \n                            className=\"flex items-center justify-between p-3 bg-muted rounded-lg\"\n                            data-testid={`top-performer-${index}`}\n                          >\n                            <div className=\"flex items-center space-x-3\">\n                              <Badge variant=\"secondary\" className=\"w-8 h-8 rounded-full flex items-center justify-center\">\n                                {index + 1}\n                              </Badge>\n                              <div>\n                                <div className=\"font-medium\">{ut.player.name}</div>\n                                <div className=\"text-sm text-muted-foreground\">\n                                  {ut.player.position} - {ut.player.team}\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"text-right\">\n                              <div className=\"font-bold text-primary\">⭐ {ut.player.rating}</div>\n                              <div className=\"text-sm text-muted-foreground\">\n                                {ut.player.goals}G + {ut.player.assists}A\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                        {topPerformers.length === 0 && (\n                          <p className=\"text-center text-muted-foreground py-4\" data-testid=\"no-top-performers\">\n                            Nessun giocatore in rosa\n                          </p>\n                        )}\n                      </div>\n                    </CardContent>\n                  </Card>\n\n                  {/* Performance Metrics */}\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <BarChart3 className=\"h-5 w-5\" />\n                        Metriche Performance\n                      </CardTitle>\n                      <CardDescription>Statistiche dettagliate della squadra</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-6\">\n                        <div className=\"grid grid-cols-2 gap-4\">\n                          <div className=\"text-center\">\n                            <div className=\"text-3xl font-bold text-chart-1\">\n                              {teamStats?.totalGoals || 0}\n                            </div>\n                            <div className=\"text-sm text-muted-foreground\">Gol Totali</div>\n                          </div>\n                          <div className=\"text-center\">\n                            <div className=\"text-3xl font-bold text-chart-2\">\n                              {teamStats?.totalAssists || 0}\n                            </div>\n                            <div className=\"text-sm text-muted-foreground\">Assist Totali</div>\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-4\">\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-medium\">Efficienza Offensiva</span>\n                            <span className=\"text-sm text-chart-1 font-bold\">\n                              {userTeam.length > 0 ? \n                                (((teamStats?.totalGoals || 0) + (teamStats?.totalAssists || 0)) / userTeam.length).toFixed(1)\n                                : \"0.0\"\n                              }\n                            </span>\n                          </div>\n                          \n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-medium\">Cartellini per Partita</span>\n                            <span className=\"text-sm text-chart-3 font-bold\">\n                              {userTeam.length > 0 ? \n                                (userTeam.reduce((sum, ut) => sum + ut.player.yellowCards + ut.player.redCards * 2, 0) / userTeam.length).toFixed(1)\n                                : \"0.0\"\n                              }\n                            </span>\n                          </div>\n\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm font-medium\">Costo Medio Giocatore</span>\n                            <span className=\"text-sm text-primary font-bold\">\n                              {userTeam.length > 0 ? Math.round((teamStats?.spentCredits || 0) / userTeam.length) : 0}FM\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </div>\n            </TabsContent>\n\n            {/* Transactions Tab */}\n            <TabsContent value=\"transactions\" className=\"mt-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Storico Transazioni</CardTitle>\n                  <CardDescription>\n                    Tutti gli acquisti e le vendite della tua squadra\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  {recentTransactions.length === 0 ? (\n                    <div className=\"text-center py-8\" data-testid=\"no-transactions\">\n                      <div className=\"w-12 h-12 bg-muted rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <BarChart3 className=\"w-6 h-6 text-muted-foreground\" />\n                      </div>\n                      <p className=\"text-muted-foreground\">Nessuna transazione effettuata</p>\n                    </div>\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {recentTransactions.map((transaction) => {\n                        const player = userTeam.find(ut => ut.playerId === transaction.playerId)?.player;\n                        return (\n                          <div \n                            key={transaction.id} \n                            className=\"flex items-center justify-between p-4 bg-muted rounded-lg\"\n                            data-testid={`transaction-${transaction.id}`}\n                          >\n                            <div className=\"flex items-center space-x-3\">\n                              <Badge \n                                variant={transaction.type === \"BUY\" ? \"default\" : \"destructive\"}\n                                className=\"min-w-[60px]\"\n                              >\n                                {transaction.type === \"BUY\" ? \"Acquisto\" : \"Vendita\"}\n                              </Badge>\n                              <div>\n                                <div className=\"font-medium\">\n                                  {player?.name || \"Giocatore sconosciuto\"}\n                                </div>\n                                <div className=\"text-sm text-muted-foreground\">\n                                  {player?.team} • {new Date(transaction.createdAt).toLocaleDateString()}\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"text-right\">\n                              <div className={`font-bold ${transaction.type === \"BUY\" ? \"text-red-600\" : \"text-green-600\"}`}>\n                                {transaction.type === \"BUY\" ? \"-\" : \"+\"}{transaction.amount}FM\n                              </div>\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </main>\n\n      <MobileNav />\n    </div>\n  );\n}","size_bytes":20901},"client/src/components/layout/header.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport type { TeamStats } from \"@shared/schema\";\n\nexport function Header() {\n  const { user } = useAuth();\n  const [location] = useLocation();\n\n  const { data: teamStats } = useQuery<TeamStats>({\n    queryKey: [\"/api/team\", user?.id, \"stats\"],\n    enabled: !!user?.id,\n  });\n\n  if (!user?.id) {\n    return null;\n  }\n\n  const navigation = [\n    { name: \"Dashboard\", href: \"/\", active: location === \"/\" },\n    { name: \"Rosa\", href: \"/roster\", active: location === \"/roster\" },\n    { name: \"Mercato\", href: \"/market\", active: location === \"/market\" },\n    { name: \"Statistiche\", href: \"/stats\", active: location === \"/stats\" },\n    { name: \"Simula\", href: \"/simulation\", active: location === \"/simulation\" },\n  ];\n\n  return (\n    <header className=\"bg-card shadow-sm border-b border-border\">\n      <div className=\"flag-accent\"></div>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-primary-foreground\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                </svg>\n              </div>\n              <h1 className=\"text-xl font-bold text-foreground\">Fantacalcio Serie A</h1>\n            </div>\n          </div>\n          \n          <nav className=\"hidden md:flex space-x-8\">\n            {navigation.map((item) => (\n              <Link key={item.name} href={item.href}>\n                <span \n                  className={`${\n                    item.active \n                      ? \"text-primary font-medium border-b-2 border-primary\" \n                      : \"text-muted-foreground hover:text-foreground\"\n                  } px-1 pb-2 transition-colors cursor-pointer`}\n                  data-testid={`nav-${item.name.toLowerCase()}`}\n                >\n                  {item.name}\n                </span>\n              </Link>\n            ))}\n          </nav>\n\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Avatar className=\"h-8 w-8\">\n                <AvatarFallback className=\"text-sm\">\n                  {(user.firstName || user.email)?.slice(0, 2).toUpperCase()}\n                </AvatarFallback>\n              </Avatar>\n              <span className=\"text-sm font-medium text-foreground hidden sm:block\" data-testid=\"text-username\">\n                {user.firstName || user.email}\n              </span>\n            </div>\n            \n            <div className=\"bg-muted px-3 py-1 rounded-full\">\n              <span className=\"text-sm font-semibold text-primary\" data-testid=\"text-credits\">\n                {teamStats?.remainingCredits || 500}FM\n              </span>\n            </div>\n\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => window.location.href = \"/api/logout\"}\n              data-testid=\"button-logout\"\n            >\n              Esci\n            </Button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}","size_bytes":3619},"client/src/components/layout/mobile-nav.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { BarChart3, Home, Search, Users, Calendar } from \"lucide-react\";\n\nexport function MobileNav() {\n  const [location] = useLocation();\n\n  const navigation = [\n    { name: \"Home\", href: \"/\", icon: Home, active: location === \"/\" },\n    { name: \"Rosa\", href: \"/roster\", icon: Users, active: location === \"/roster\" },\n    { name: \"Mercato\", href: \"/market\", icon: Search, active: location === \"/market\" },\n    { name: \"Stats\", href: \"/stats\", icon: BarChart3, active: location === \"/stats\" },\n    { name: \"Calendario\", href: \"/calendar\", icon: Calendar, active: location === \"/calendar\" },\n  ];\n\n  return (\n    <nav className=\"md:hidden fixed bottom-0 left-0 right-0 bg-card border-t border-border\">\n      <div className=\"grid grid-cols-5 text-center\">\n        {navigation.map((item) => {\n          const Icon = item.icon;\n          return (\n            <Link key={item.name} href={item.href}>\n              <a \n                className={`flex flex-col items-center py-3 ${\n                  item.active ? \"text-primary\" : \"text-muted-foreground\"\n                }`}\n                data-testid={`mobile-nav-${item.name.toLowerCase()}`}\n              >\n                <Icon className=\"w-5 h-5 mb-1\" />\n                <span className=\"text-xs font-medium\">{item.name}</span>\n              </a>\n            </Link>\n          );\n        })}\n      </div>\n    </nav>\n  );\n}\n","size_bytes":1417},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/calendar.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar as CalendarIcon, Clock, Trophy, MapPin } from \"lucide-react\";\nimport type { Match } from \"@shared/schema\";\n\nexport default function Calendar() {\n  const { isAuthenticated, isLoading } = useAuth();\n  const [selectedRound, setSelectedRound] = useState<number | null>(null);\n\n  const { data: matches = [], isLoading: matchesLoading } = useQuery<Match[]>({\n    queryKey: [\"/api/calendar\"],\n  });\n\n  if (isLoading || matchesLoading) {\n    return (\n      <div className=\"min-h-screen bg-background flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-2\"></div>\n          <p className=\"text-muted-foreground\">Caricamento calendario...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Raggruppa le partite per giornata\n  const matchesByRound = matches.reduce((acc, match) => {\n    if (!acc[match.round]) {\n      acc[match.round] = [];\n    }\n    acc[match.round].push(match);\n    return acc;\n  }, {} as Record<number, Match[]>);\n\n  const rounds = Object.keys(matchesByRound).map(Number).sort((a, b) => a - b);\n  const displayedRounds = selectedRound ? [selectedRound] : rounds;\n\n  const formatDate = (date: Date) => {\n    return new Intl.DateTimeFormat('it-IT', {\n      weekday: 'short',\n      day: '2-digit',\n      month: 'short',\n      hour: '2-digit',\n      minute: '2-digit',\n    }).format(new Date(date));\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case \"finished\":\n        return <Badge variant=\"default\" className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">Terminata</Badge>;\n      case \"live\":\n        return <Badge variant=\"destructive\" className=\"animate-pulse\">Live</Badge>;\n      case \"scheduled\":\n        return <Badge variant=\"outline\">Programmata</Badge>;\n      case \"postponed\":\n        return <Badge variant=\"secondary\">Rinviata</Badge>;\n      default:\n        return <Badge variant=\"outline\">{status}</Badge>;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <div className=\"border-b bg-card\">\n        <div className=\"container mx-auto px-4 py-6\">\n          <div className=\"flex items-center space-x-3\">\n            <CalendarIcon className=\"h-8 w-8 text-primary\" />\n            <div>\n              <h1 className=\"text-3xl font-bold text-foreground\">Calendario Serie A</h1>\n              <p className=\"text-muted-foreground\">Partite, risultati e formazioni 2025/26</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <main className=\"container mx-auto px-4 py-6\">\n        {/* Filtro per giornata */}\n        <div className=\"mb-6\">\n          <div className=\"flex flex-wrap gap-2\">\n            <Button\n              variant={selectedRound === null ? \"default\" : \"outline\"}\n              size=\"sm\"\n              onClick={() => setSelectedRound(null)}\n              data-testid=\"button-all-rounds\"\n            >\n              Tutte le giornate\n            </Button>\n            {rounds.map((round) => (\n              <Button\n                key={round}\n                variant={selectedRound === round ? \"default\" : \"outline\"}\n                size=\"sm\"\n                onClick={() => setSelectedRound(round)}\n                data-testid={`button-round-${round}`}\n              >\n                {round}ª Giornata\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* Lista delle giornate */}\n        <div className=\"space-y-6\">\n          {displayedRounds.map((round) => (\n            <Card key={round} className=\"overflow-hidden\">\n              <CardHeader className=\"bg-muted/50\">\n                <CardTitle className=\"flex items-center justify-between\">\n                  <span className=\"flex items-center space-x-2\">\n                    <Trophy className=\"h-5 w-5 text-primary\" />\n                    <span>{round}ª Giornata</span>\n                  </span>\n                  <span className=\"text-sm text-muted-foreground\">\n                    {matchesByRound[round].filter(m => m.status === \"finished\").length}/{matchesByRound[round].length} completate\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"p-0\">\n                <div className=\"divide-y divide-border\">\n                  {matchesByRound[round]\n                    .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n                    .map((match) => (\n                    <div \n                      key={match.id} \n                      className=\"p-4 hover:bg-muted/50 transition-colors\"\n                      data-testid={`match-${match.fantacalcioId}`}\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        {/* Teams and Score */}\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <div className=\"flex items-center space-x-4\">\n                              <span className=\"text-lg font-semibold min-w-20 text-right\" data-testid={`team-home-${match.fantacalcioId}`}>\n                                {match.homeTeam}\n                              </span>\n                              \n                              {match.status === \"finished\" ? (\n                                <div className=\"flex items-center space-x-2 px-4 py-2 bg-muted rounded-lg\">\n                                  <span className=\"text-xl font-bold\" data-testid={`score-home-${match.fantacalcioId}`}>\n                                    {match.homeScore}\n                                  </span>\n                                  <span className=\"text-muted-foreground\">-</span>\n                                  <span className=\"text-xl font-bold\" data-testid={`score-away-${match.fantacalcioId}`}>\n                                    {match.awayScore}\n                                  </span>\n                                </div>\n                              ) : (\n                                <div className=\"px-4 py-2 bg-muted/30 rounded-lg\">\n                                  <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                                </div>\n                              )}\n                              \n                              <span className=\"text-lg font-semibold min-w-20\" data-testid={`team-away-${match.fantacalcioId}`}>\n                                {match.awayTeam}\n                              </span>\n                            </div>\n                          </div>\n                          \n                          {/* Match Info */}\n                          <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n                            <div className=\"flex items-center space-x-1\">\n                              <CalendarIcon className=\"h-4 w-4\" />\n                              <span data-testid={`date-${match.fantacalcioId}`}>\n                                {formatDate(match.date)}\n                              </span>\n                            </div>\n                            <div className=\"flex items-center space-x-1\">\n                              <MapPin className=\"h-4 w-4\" />\n                              <span>Stadium {match.homeTeam}</span>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* Status */}\n                        <div className=\"ml-4\">\n                          {getStatusBadge(match.status)}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {matches.length === 0 && (\n          <Card>\n            <CardContent className=\"text-center py-12\">\n              <CalendarIcon className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <h3 className=\"text-lg font-semibold mb-2\">Nessuna partita disponibile</h3>\n              <p className=\"text-muted-foreground\">Il calendario verrà aggiornato presto con le partite di Serie A.</p>\n            </CardContent>\n          </Card>\n        )}\n      </main>\n    </div>\n  );\n}","size_bytes":8636}},"version":1}