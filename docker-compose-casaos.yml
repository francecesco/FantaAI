version: '3.8'

services:
  fantai:
    build: .
    container_name: fantai-app
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fantaseriea
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/fantaseriea
      SESSION_SECRET: your-super-secret-session-key-change-this-in-production
      NODE_ENV: production
      # Football Data API
      FOOTBALL_DATA_API_KEY: ${FOOTBALL_DATA_API_KEY}
      # AI Configuration
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    ports:
      - "3000:5001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fantai_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: fantai-postgres
    environment:
      POSTGRES_DB: fantaseriea
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fantai_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  fantai_network:
    driver: bridge
